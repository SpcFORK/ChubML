{"version":3,"sources":["../src/cml.ts","../src/cst.ts","../src/CowErr.ts","../src/static.ts"],"sourcesContent":["// @ CowSTD\nimport { chaosGl, NOOP, ANOOP } from './cst';\nimport { CowErr } from './CowErr';\n\nvar checkEnvironment = () => {\n  // So nasty I'd rather write it as if it were a Py function.\n\n  let isImportSupported = false;\n\n  try {\n    eval('import.meta')\n    isImportSupported = true;\n  }\n  catch { }\n\n  if (isImportSupported) {\n    // ES Module environment\n    return 'ES Module';\n  }\n\n  else if (typeof module\n    !== 'undefined'\n\n    && module?.exports\n\n    && typeof window\n    === 'undefined') {\n    // Node.js environment\n    return 'Node';\n  }\n\n  else if (typeof window\n    !== 'undefined'\n\n    && typeof window?.document\n    !== 'undefined') {\n    // Browser environment\n    return 'Browser';\n  }\n\n  else {\n    // Unknown environment\n    return 'Unknown';\n  }\n}\n\n// @ CML\nimport { CML_Static } from './static';\n\ninterface CILElement {\n  c: string;\n  i: number;\n}\n\ninterface ChubNode {\n  tag: string,\n  id: string,\n  class: string,\n  content: string,\n  data: string,\n  style: string,\n  attr: string,\n  indent: number,\n}\n\ninterface SortedCILE extends CILElement {\n  children: SortedCILE[]\n  o?: ChubNode\n}\n\ntype CILEList = CILElement[];\ntype SortedCIL = SortedCILE[];\n\n/**\n * A ChubML instance.\n * \n * =-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-\n *\n * 2024\n * SpcFORK - ChubML\n * Copyright (c) SpcFORK\n * \n * =-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-\n *\n * ```go\n *       ,\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\",^,\"\"\"\"\"\"\"\"\"\"\"\",\n *     .l ?]]]]]]]]]]]]]]]].~.????????????.I\n *     \",!l]IIIIIIIIIIIIIIII,< ]]]]]]]]]]]] l\n *     l ]]]lllllllllllllIII:> ]]]]]]]]]]]] l\n *     l:iii>>>>>>>>>>>>>]]] ~ ]]]]]]]]]]]] l\n *     l`++++++++++++++++---.~ ]]]]]]]]]]]] l\n *     lIIIIIIIIIIIIIIIIIIII;~.??????----?? l\n *     lIlllllllllllllllllll:iI\"\"\"\"\"\",;:;''l;\".\n *     l;lllllllllllllllllll:l    '^,,Iii??]-i;\".\n *     `I,I:::::::::I,,,,,,,:`   ,;ii??]]]]]]]-i\",\n *      ,:iiiiiiiii:,          :IIii!!!!!!!?]]]I:\"\n *      l ]]]]]]]]] l           ^`````````l.]]]] i\n *      l ]]]]]]]]] l                   .`l.]]]]?.I\n *      l.?]]]]]]]] l         ,\"\"\"\"\"\"\"\"\";!!?]]]]] l\n *      `i ]]]]]]]] l        I.?????????-]]]]]]]I\";\n *       ;:I]]]]]]]l;\"\"\"\"\"\"\",! ]]]]]]]]]]]]]]]?!^;\n *        I,i-]]]]]]-???????.~ ]]]]]]]]]]]]]?!,,^\n *         ^IIi?-]]]]]]]]]]] ~ ]]]]]]]]]]??!,,^\n *           ^I\"I!!!!!!!!!!!\">:!!!!!!!!!!,\",^\n *              ^```````````^ ^``````````^\n * ```\n * \n * =-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-\n * \n * TODO:\n * - Make code cleaner/compact.\n * - Make ECSS.\n * - Create CHUBECSS Parser.\n * \n * =-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-\n * \n * TOUR:\n *   *Q-Sel:\n *   $()\n *   *Array matcher\n *       arrMatch\n *   *Parser:\n *     parse()\n *       -> sortInd()\n *       -> stringi()\n *\n * =-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-\n*/\nexport class ChubMLMod extends CML_Static {\n  static ChubML = ChubMLMod\n  ChubML = ChubMLMod\n\n  // @ Options\n  static {\n    chaosGl.chubinjected = NOOP\n    chaosGl.chubstart = NOOP\n\n    window.onload = () =>\n      chaosGl.chubstart?.()\n  }\n\n  s = CML_Static\n\n  styled = {} as Record<string, any>\n\n  #Rexps = () => this.s.Rexps\n  #initialFormat(str: string) {\n    let r = this.#Rexps\n    return str\n      .replace(r().lineWithComment, \"\")\n      .replace(r().formatspace2, \"\\n\")\n      .replace(r().formatspace1, \"\\n\")\n  }\n\n  #cascadeIndentList(str: string) {\n    let strLines = str.split(/;/);\n\n    let col = [] as CILEList\n\n    for (const line of strLines) col.push({\n      c: line.trim(),\n      i: line.search(/\\S/)\n    });\n\n    return col;\n  }\n\n  #sortCILIndent(contents: CILEList) {\n    const sortedContents = [];\n    let parentStack = [];\n\n    for (const content of contents) {\n      const currentIndent = content.i;\n      const currentContent = { c: content.c, i: currentIndent, children: [] };\n\n      while (parentStack.length > 0 && currentIndent <= parentStack[parentStack.length - 1].i)\n        parentStack.pop();\n\n      if (parentStack.length > 0) {\n        const parent = parentStack[parentStack.length - 1];\n        parent.children.push(currentContent);\n      } else {\n        sortedContents.push(currentContent);\n      }\n\n      parentStack.push(Object.assign(currentContent));\n    };\n\n    return sortedContents\n  }\n\n  #makeDef = (): ChubNode => ({\n    tag: \"\",\n    id: \"\",\n    class: \"\",\n    content: \"\",\n    data: \"\",\n    style: \"\",\n    attr: \"\",\n    indent: 0,\n  })\n\n  #makeIndexes = () => ({\n    str: 0,\n    tmp: 0,\n  })\n\n  #specialTags = [\n    'area',\n    'base',\n    'br',\n    'col',\n    'embed',\n    'hr',\n    'img',\n    'input',\n    'link',\n    'meta',\n    'param',\n    'source',\n    'track',\n    'wbr'\n  ]\n\n  #handleScript(scrmatch: string[] | null) {\n    const r = this.#Rexps;\n\n    let issrc = scrmatch[1].includes(\"src=\");\n    let execafter = scrmatch[1].includes(\"\\\"execafter\\\";\\n\");\n\n    var dostill = true;\n\n    const fetchScript = async (src: string) => fetch(src)\n      .then((js) => {\n        return js.text();\n      })\n      .then((text) => {\n        // Append a script tag to the body\n        try {\n          let script = document.createElement(\"script\");\n          script.type = \"text/javascript\";\n          script.text = text;\n          document.body.appendChild(script);\n        }\n        catch (error) { console.log(error, this.s.errorList.scripterror); }\n      });\n\n    // Source Check\n    if (issrc && scrmatch) {\n      let srcis = scrmatch![1].match(/src=\"(.*)\"/);\n      if (srcis) {\n        fetchScript(srcis[1]);\n\n        dostill = false;\n      }\n    }\n\n    // Eval content (not SRC).\n    if (scrmatch !== null && dostill) {\n      try { eval(scrmatch[1]) }\n      catch (error) { console.error(error, this.s.errorList.scripterror) }\n    }\n  }\n\n  #traverse(cil: SortedCILE, i: number, indexes: { str: any; tmp?: number; }, v = ''): [SortedCILE, { str: number, tmp: number }] {\n    const r = this.#Rexps\n\n    let indentString = \"  \"\n\n    let str = cil.c\n    let isStr = str.search(r().betweenQuote)\n    let hasOpts = str.search(r().betweenCol)\n    let isscr = str.match(r().script)\n\n    let def = this.#makeDef()\n    let tempC = this.#makeDef()\n\n    // Script Operation\n    if (isscr !== null) {\n      this.#handleScript(r().script.exec(str));\n    }\n\n    var checkAttr = (arr) => arr.forEach((param, pind) => {\n\n      // ATTR's\n      switch (param[0]) {\n        case \"#\":\n          tempC.id = `${tempC.id ? tempC.id + \" \" : \"\"}${param.replace(\"#\", \" \")}`\n          break\n\n        case \".\":\n          tempC.class = `${tempC.class ? tempC.class + \" \" : \"\"}${param.replace(\".\", \" \")}`\n          break\n\n        case \"$\":\n          let dataParam = attrSyn(param)\n\n          let dataB = `data-${dataParam[0].slice(1) + \"=\\\"\" + dataParam[1] + \"\\\"\"}`\n          tempC.data = `${tempC.data ? tempC.data + \" \" : \"\"}${dataB}`\n\n          break\n\n        case \"%\":\n          let attrParam = attrSyn(param)\n\n          let attrB = `${attrParam[0].slice(1) + \"=\\\"\" + attrParam[1] + \"\\\"\"}`\n          // console.log(attrB)\n          tempC.attr = `${tempC.attr ? tempC.attr + \" \" : \"\"}${attrB}`\n\n          break\n\n        case \"@\":\n          /* \n            We need to:\n\n            Extract the @val from the param.\n            If as params, get params.\n\n            E.G.\n            @fetchw=https://www.google.com\n          */\n\n          console.log(\"using @\", `${param}`.slice(8), `${param}`.split(/[|:>=\\-\\)!~]/gm)[1].slice(1))\n\n          if (param.includes(\"fetchw\")) {\n            (async () => {\n              param = param.slice(8)\n\n              if (window?.location?.origin) {\n                param = `${param}`.includes(\"{{ORIG}}\")\n                  ? param.replace(\"{{ORIG}}\", window.location.origin)\n                  : param\n              }\n\n              tempC.tag = tempC.tag\n                ? tempC.tag\n                : 'fetcherBlock'\n\n              tempC.data = (\n                `${tempC.data ? tempC.data + \" \" : \"\"}data-fetchw=\"${param}\"`\n                + ` data-instance=\"${new Date().getTime()}\"`\n              )\n\n              let fw = await fetch(await findFile([param])) || {\n                text: () => { return param },\n              }\n\n              let fwtext = await fw.text()\n              tempC.content = `${fwtext ? fwtext : \"\"}`\n\n              // If window is loaded before script end, replace content.\n              if (window?.location?.origin) {\n                $(`[${tempC.data.split(' ').join('][')}]`)\n                  .innerHTML = tempC.content\n                    .replace(/\\n/g, '\\n</br>\\n')\n              }\n\n            })()\n\n          }\n          break\n\n        default:\n          tempC.tag = `${tempC.tag ? tempC.tag + \" \" : \"\"}${param}`\n      }\n    })\n\n    if (isStr !== -1) {\n      let tempLines = str.split(r().betweenCol)\n      let content = str.split(r().betweenQuote)[1]\n\n      if (hasOpts == null) {\n        tempC = def\n      } else {\n        var inner = tempLines[1] || \"\"\n        checkAttr(inner.split(\" \"))\n      }\n\n      indexes.str++\n      tempC.content = content\n\n    } else {\n      inner = strBuild.split(\" \")\n\n      checkAttr(inner)\n    }\n\n    return [cilCopy, indexes]\n  }\n\n  #parseChubNode(cil: SortedCILE, opts = this.#makeIndexes()) {\n    const o = cil.o!\n    if (!o) throw new CowErr(`No CIL object found!`)\n\n    let isTemplate = false\n    let shorter = false\n\n    let specialfind = this.arrMatch(o.tag, this.#specialTags)\n    let isSpecial = specialfind.count\n    let inList = specialfind.list\n\n    let html = ''\n\n    this.#parseTemplates(cil, opts);\n\n    html = `\\n${cil.i}<${o.tag}`;\n\n    const is = (v: any) => !!v\n    const addTo = (v: any) => html += v\n\n    switch (true) {\n      // case !!o().class: html += ` class=\"${o().class.slice(1)}\"`\n      case is(o.class): addTo(` class=\"${o.class}\"`)\n      case is(o.id): addTo(` id=\"${o.id}\"`)\n      case is(o.style): addTo(` style=\"${o.style}\"`)\n      case is(o.data): addTo(` ${o.data}`)\n      case is(o.attr): addTo(` ${o.attr}`)\n    }\n\n    if (isSpecial > 0) shorter = true\n\n    html += shorter\n      ? \" />\\n\"\n      : \">\\n\";\n\n    // This is enough for certain tags.\n    for (const child of cil.children) switch (child.c[0]) {\n      case \"\\\"\":\n        html += child.i + child.c.slice(1, child.c.length - 1);\n        break;\n\n      default:\n        html += child.i + this.#parseChubNode(child, opts);\n    }\n\n    html += !shorter\n      ? `\\n${cil.i}</${o.tag}>\\n`\n      : \"\\n\"\n\n    // ¯\\_(ツ)_/¯ Quickest fix.\n    if (html.search(\"<>\")) html = html\n      .replace(\"<>\", \"\")\n      .replace(\"</>\", \"\")\n\n    if (html.includes(\"head\")) {\n\n      for (let stydm in this.styled) {\n        if (this.styled[stydm] === true && this.styled.styles[stydm]) {\n          html = html.replace(\"<head>\", \"<head>\\n\" + this.styled.styles[stydm])\n\n          // Set to \"has\" since we check earlier if the value is false to define it\n          // Also, might use later, need to exist, not be true.\n          this.styled[stydm] = \"has\"\n        }\n      }\n\n    }\n\n    return html\n  }\n\n  #parseTemplates(cil: SortedCILE, opts = this.#makeIndexes()) {\n    switch (cil.tag) {\n\n    }\n  }\n\n  #constuctFrom(cil: SortedCILE, v = '') {\n    let indexes = this.#makeIndexes()\n\n    let travRes = this.#traverse(cil, 0, indexes, v);\n\n    // @Crossover\n    { [cil, indexes] = travRes }\n\n    let res = this.#parseChubNode(cil, indexes)\n\n    return res\n  }\n\n  parse(source: string) {\n    let str = this.#initialFormat(source)\n\n    let indList = this.#cascadeIndentList(str)\n\n    let sorted = this.#sortCILIndent(indList);\n\n    return this.#constuctFrom(sorted[0]);\n  }\n\n  ChubRep(doc: string, quirky = \"<!DOCTYPE html>\") {\n    (doc as any) = chubml.parse(doc);\n    document.open();\n    document.write(quirky + '\\n' + doc);\n    document.close();\n  }\n\n  injectChub(input: string) {\n    // var input = `\n    // div;\n    //   \"wow, im super simple. <br>\n    //   and supper COOOL!\";\n    //   hr #wow $hey=lol .very .omg .neat %omg=js|is|cool;\n    //   :Super .cool: \"WOOO!\";\n    //     span .woah;\n    //       \"wow!\";\n    // `;\n\n    var htmlCode = chubml.parse(input);\n\n    if (chaosGl.chubDev == true) console.log(htmlCode)\n\n    let locationB = chaosGl.chubLocation || \"chub\"\n    let locationGot = chubml.$(locationB)\n    if (!locationGot) locationB = \"body\"\n    else locationGot.innerHTML = htmlCode;\n\n    // On finish, run finish.\n    chaosGl.chubinjected?.(locationGot);\n  }\n\n  Router = class Router {\n    __env__ = checkEnvironment(opts);\n\n    constructor() {\n      switch (this.__env__) {\n        case \"Node\":\n          break;\n        case \"Browser\":\n          break;\n      }\n    }\n\n  }\n\n  // Reformat Attributes to prevent conflicts and such.\n  CHUBfax(tex: string, sep = \" \") {\n    let modtxt = tex || \"\";\n    modtxt = modtxt\n      .replace(\"=\", \"|e\")\n      .replace(\";\", \"|col\")\n      .replace(\"\\\"\", \"|qw\")\n      .replace(sep, \"|\")\n\n    return modtxt\n  }\n\n  attrSyn(tex: string) {\n    try {\n      if (`${tex}`.match(/=/gm)!?.length > 1) throw this.s.errorList.eqspl3\n\n      let attrParam = tex\n        // Tokenize\n        .replace(\"=\", \" spcfork.Equals.Token \")\n        .replace(\"\\\\|\", \" spcfork.Pipe.Token \")\n\n        .replace(/\\|e/gm, \"=\")\n        .replace(/\\|col/gm, \";\")\n        .replace(/\\|qw/gm, \"\\\"\")\n        .replace(/\\|/gm, \" \")\n\n        .replace(\" spcfork.Pipe.Token \", \"|\")\n\n        // Split at Token to prevent multiple splits.\n        .split(\" spcfork.Equals.Token \")\n\n      // console.log(attrParam.length, attrParam)\n      return attrParam\n    } catch { }\n  }\n\n  /**\n   * Fetch a web page and convert it to CHUB\n   * @param {string} url The URL of the web page to fetch\n   * @returns {string} The CHUB representation of the web page\n   */\n  async CHUBWFetch(url) {\n    try {\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const html = await response.text();\n      console.log(htmlToChub(html));\n      return htmlToChub(html);\n    } catch (error) {\n      console.error('Error fetching web page:', error);\n      return null;\n    }\n  }\n\n\n  /**\n   * @param {string} dupe - The dupe to be added to the collection.\n   * @returns {object} - The edited dupe, the dupe collection, and the stringified and parsed collection.\n   */\n  CHUBduper(dupe = \"p;\") {\n    window.DupeCollection\n      ? window.DupeCollection[dupe] = (window.DupeCollection[dupe] + 1 || 0)\n      : window.DupeCollection = { [dupe]: 0 }\n\n    editedDupe = dupe.contains(\";\")\n      ? (() => {\n        editedDupe = dupe.split(\";\")\n\n        editedDupe[0] += ` #${window.DupeCollection[`${dupe}`] || \"#0\"}`\n        console.log(editedDupe)\n        return editedDupe.join(\"\")\n      })()\n\n      : (() => { return dupe + \";\" })();\n\n    return {\n      editedDupe,\n      D: window.DupeCollection,\n      s: (() => JSON.stringify(window.DupeCollection.toJSON())),\n      c: (() => JSON.parse(window.DupeCollection.toJSON())),\n    }\n  }\n\n  CHUBstrprep(str) {\n    return str\n      .replace(/[.*+?^${}()|[\\]\\\\\"';:]/g, '\\\\$&')\n      .replace(/[;]/g, '|col')\n  }\n\n  CHUBunmess(str) {\n    const escapedStr = str.replace(/\\\\\\\"/g, '\"');\n    const unescapedStr = escapedStr.replace(/\\\\\\|col/g, ',');\n\n    return [\n      unescapedStr,\n      JSON.parse(unescapedStr),\n    ]\n\n  }\n}\n\nconst chubml = new ChubMLMod;\n\n// @ Globals\n{\n\n}\n\n// @ Exporter\ntry {\n  module.exports = {\n    chubml,\n    CHUBWFetch,\n    CHUBstrprep,\n    CHUBunmess,\n    CHUBduper,\n    CHUBfax,\n    CHUBECSS,\n    CHUBduper,\n    CHUBparse,\n    CHUBsanitize,\n    ChubRep,\n    htmlToChub,\n  }\n} catch { }\ntry { chaosGl.window.ChubML = chubml } catch { }","export const chaosGl = globalThis as any;\n\nexport const NOOP = (): any => { };\nexport const ANOOP = async (): Promise<any> => { };","export class CowErr extends Error {\n  constructor(message: string | (string | undefined)[], ext?: string) {\n    super(Array.isArray(message) ? message.join('\\n') : message);\n\n    this.name = \"CowErr\"\n      + (ext ? ` (${ext})` : \"\");\n  }\n\n  toss = (...params: any[]) => console.error(this, ...params);\n\n  throw() {\n    throw this;\n  }\n}","import { chaosGl, NOOP, ANOOP } from './cst';\n\nimport { CowErr } from './CowErr';\nimport { CowObj, CowObject } from './CowObj'\n\nexport class CML_Static {\n  static CML_Static = CML_Static\n  CML_Static = CML_Static\n\n  static errorList = {\n    // For Params: %lol=haha=asd => split at each `=` => greater than 3? => error.\n    eqspl3: new CowErr([\n      `You can't have more than 3 Equals characters (\\`=\\`)!`,\n      `Try to shorten it please, use \\`|e\\``,\n      `it is the escaped version of \\`=\\`.`,\n      ,\n      `Use: \"meta %name=viewport %content=width|edevice-width;\"`,\n      `=> \\`|e\\` replaced with \\`=\\``,\n      `=> \"meta %name=viewport %content=width=device-width;\"`\n    ]),\n\n    scripterror: new CowErr([\n      `Apparently, you made an error loading or executing your script.`,\n      `Look back and take a gander.`,\n      ,\n      `Potentially:`,\n      `=> Check if you loaded the right file.`,\n      `=> Check if you made a typo.`,\n      `=> Check if you did not add the directory to the file.`,\n      `=> Check if you did every thing else right.`,\n      ,\n      `=> If all else.cry :(`\n    ]),\n\n  }\n\n  static DisplayErrors = {\n    noBeam: `\n  c;\n    beam;\n      \"Beam Failed!\n      <br>\n      Try to fix the simple Fetch error.\n      <br>\n      Shouldn't take long.\";\n    `,\n  }\n\n  static Rexps = {\n    quoteExept: /\\n(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/gm,\n    colExept: /\\n(?=(?:(?:[^:]*:){2})*[^:]*$)/gm,\n\n    betweenQuote: /\"([a-zA-Z\\s\\S]+)\"/gm,\n    betweenCol: /^:([a-zA-Z\\S\\s]+):/gm,\n\n    script: /\\{\\=([a-zA-Z\\S\\s][^;]+)\\=\\}/gm,\n    comment: /\\/\\/(.*)\\n{0,1}/gm,\n    lineWithComment: /[^a-zA-Z0-9:-■\\n]+((?:[\\t ]{0,})\\/\\/(?:.*)\\n{0,1})/gm,\n\n    formatspace1: /\\n{1,}/gm,\n    formatspace2: /\\n[\\t \\n]{0,}\\n/gm,\n  }\n\n  $<T extends Element>(a: string) {\n    return document.querySelector<T>(a)\n  }\n\n  arrMatch(str: string | any[], arr: string | any[]) {\n    let count = 0;\n    let list = [];\n\n    for (let i = 0; i < arr.length; i++) if (str.includes(arr[i])) {\n      count++;\n      list.push(arr[i])\n    }\n    return { count, list };\n  }\n}"],"mappings":"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","names":["r","opts"]}