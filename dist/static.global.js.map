{"version":3,"sources":["../src/CowErr.ts","../src/static.ts"],"sourcesContent":["export class CowErr extends Error {\n  constructor(message: string | (string | undefined)[], ext?: string) {\n    super(Array.isArray(message) ? message.join('\\n') : message);\n\n    this.name = \"CowErr\"\n      + (ext ? ` (${ext})` : \"\");\n  }\n\n  toss = (...params: any[]) => console.error(this, ...params);\n\n  throw() {\n    throw this;\n  }\n}","import { chaosGl, NOOP, ANOOP } from './cst';\n\nimport { CowErr } from './CowErr';\nimport { CowObj, CowObject } from './CowObj'\n\nexport class CML_Static {\n  static CML_Static = CML_Static\n  CML_Static = CML_Static\n\n  static errorList = {\n    // For Params: %lol=haha=asd => split at each `=` => greater than 3? => error.\n    eqspl3: new CowErr([\n      `You can't have 3 Equals characters (\\`=\\`)!`,\n      `Try to shorten it please, use \\`|e\\``,\n      `it is the escaped version of \\`=\\`.`,\n      ,\n      `Use: \"meta %name=viewport %content=width|edevice-width;\"`,\n      `=> \\`|e\\` replaced with \\`=\\``,\n      `=> \"meta %name=viewport %content=width=device-width;\"`\n    ]),\n\n    scripterror: new CowErr([\n      `Apparently, you made an error loading or executing your script.`,\n      `Look back and take a gander.`,\n      ,\n      `Potentially:`,\n      `=> Check if you loaded the right file.`,\n      `=> Check if you made a typo.`,\n      `=> Check if you did not add the directory to the file.`,\n      `=> Check if you did every thing else right.`,\n      ,\n      `=> If all else.cry :(`\n    ]),\n\n  }\n\n  static DisplayErrors = {\n    noBeam: `\n  c;\n    beam;\n      \"Beam Failed!\n      <br>\n      Try to fix the simple Fetch error.\n      <br>\n      Shouldn't take long.\";\n    `,\n  }\n\n  static Rexps = {\n    quoteExept: /\\n(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/gm,\n    colExept: /\\n(?=(?:(?:[^:]*:){2})*[^:]*$)/gm,\n\n    betweenQuote: /\"([a-zA-Z\\s\\S]+)\"/gm,\n    betweenCol: /^:([a-zA-Z\\S\\s]+):/gm,\n\n    script: /\\{\\=([a-zA-Z\\S\\s][^;]+)\\=\\}/gm,\n    comment: /\\/\\/(.*)\\n{0,1}/gm,\n    lineWithComment: /[^a-zA-Z0-9:-â– \\n]+((?:[\\t ]{0,})\\/\\/(?:.*)\\n{0,1})/gm,\n\n    formatspace1: /\\n{1,}/gm,\n    formatspace2: /\\n[\\t \\n]{0,}\\n/gm,\n  }\n\n  $<T extends Element>(a: string) {\n    return document.querySelector<T>(a)\n  }\n\n  arrMatch(str: string | any[], arr: string | any[]) {\n    let count = 0;\n    let list = [];\n\n    for (let i = 0; i < arr.length; i++) if (str.includes(arr[i])) {\n      count++;\n      list.push(arr[i])\n    }\n    return { count, list };\n  }\n}"],"mappings":";;;AAAO,MAAM,SAAN,cAAqB,MAAM;AAAA,IAChC,YAAY,SAA0C,KAAc;AAClE,YAAM,MAAM,QAAQ,OAAO,IAAI,QAAQ,KAAK,IAAI,IAAI,OAAO;AAE3D,WAAK,OAAO,YACP,MAAM,KAAK,GAAG,MAAM;AAAA,IAC3B;AAAA,IAEA,OAAO,IAAI,WAAkB,QAAQ,MAAM,MAAM,GAAG,MAAM;AAAA,IAE1D,QAAQ;AACN,YAAM;AAAA,IACR;AAAA,EACF;;;ACRO,MAAM,aAAN,MAAM,YAAW;AAAA,IACtB,OAAO,aAAa;AAAA,IACpB,aAAa;AAAA,IAEb,OAAO,YAAY;AAAA;AAAA,MAEjB,QAAQ,IAAI,OAAO;AAAA,QACjB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AAAA,MAED,aAAa,IAAI,OAAO;AAAA,QACtB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IAEH;AAAA,IAEA,OAAO,gBAAgB;AAAA,MACrB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASV;AAAA,IAEA,OAAO,QAAQ;AAAA,MACb,YAAY;AAAA,MACZ,UAAU;AAAA,MAEV,cAAc;AAAA,MACd,YAAY;AAAA,MAEZ,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,iBAAiB;AAAA,MAEjB,cAAc;AAAA,MACd,cAAc;AAAA,IAChB;AAAA,IAEA,EAAqB,GAAW;AAC9B,aAAO,SAAS,cAAiB,CAAC;AAAA,IACpC;AAAA,IAEA,SAAS,KAAqB,KAAqB;AACjD,UAAI,QAAQ;AACZ,UAAI,OAAO,CAAC;AAEZ,eAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,IAAK,KAAI,IAAI,SAAS,IAAI,CAAC,CAAC,GAAG;AAC7D;AACA,aAAK,KAAK,IAAI,CAAC,CAAC;AAAA,MAClB;AACA,aAAO,EAAE,OAAO,KAAK;AAAA,IACvB;AAAA,EACF;","names":[]}