{"version":3,"sources":["../src/cst.ts","../src/CowErr.ts","../src/static.ts","../src/cml.ts"],"sourcesContent":["export const chaosGl = globalThis as any;\n\nexport const NOOP = (): any => { };\nexport const ANOOP = async (): Promise<any> => { };","export class CowErr extends Error {\n  constructor(message: string | (string | undefined)[], ext?: string) {\n    super(Array.isArray(message) ? message.join('\\n') : message);\n\n    this.name = \"CowErr\"\n      + (ext ? ` (${ext})` : \"\");\n  }\n\n  toss = (...params: any[]) => console.error(this, ...params);\n\n  throw() {\n    throw this;\n  }\n}","import { chaosGl, NOOP, ANOOP } from './cst';\n\nimport { CowErr } from './CowErr';\nimport { CowObj, CowObject } from './CowObj'\n\nexport class CML_Static {\n  static CML_Static = CML_Static\n  CML_Static = CML_Static\n\n  static errorList = {\n    // For Params: %lol=haha=asd => split at each `=` => greater than 3? => error.\n    eqspl3: new CowErr([\n      `You can't have more than 3 Equals characters (\\`=\\`)!`,\n      `Try to shorten it please, use \\`|e\\``,\n      `it is the escaped version of \\`=\\`.`,\n      ,\n      `Use: \"meta %name=viewport %content=width|edevice-width;\"`,\n      `=> \\`|e\\` replaced with \\`=\\``,\n      `=> \"meta %name=viewport %content=width=device-width;\"`\n    ]),\n\n    scripterror: new CowErr([\n      `Apparently, you made an error loading or executing your script.`,\n      `Look back and take a gander.`,\n      ,\n      `Potentially:`,\n      `=> Check if you loaded the right file.`,\n      `=> Check if you made a typo.`,\n      `=> Check if you did not add the directory to the file.`,\n      `=> Check if you did every thing else right.`,\n      ,\n      `=> If all else.cry :(`\n    ]),\n\n  }\n\n  static DisplayErrors = {\n    noBeam: `\n  c;\n    beam;\n      \"Beam Failed!\n      <br>\n      Try to fix the simple Fetch error.\n      <br>\n      Shouldn't take long.\";\n    `,\n  }\n\n  static Rexps = {\n    quoteExept: /\\n(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/gm,\n    colExept: /\\n(?=(?:(?:[^:]*:){2})*[^:]*$)/gm,\n\n    betweenQuote: /\"([a-zA-Z\\s\\S]+)\"/gm,\n    betweenCol: /^:([a-zA-Z\\S\\s]+):/gm,\n\n    script: /\\{\\=([a-zA-Z\\S\\s][^;]+)\\=\\}/gm,\n    comment: /\\/\\/(.*)\\n{0,1}/gm,\n    lineWithComment: /[^a-zA-Z0-9:-â– \\n]+((?:[\\t ]{0,})\\/\\/(?:.*)\\n{0,1})/gm,\n\n    formatspace1: /\\n{1,}/gm,\n    formatspace2: /\\n[\\t \\n]{0,}\\n/gm,\n  }\n\n  $<T extends Element>(a: string) {\n    return document.querySelector<T>(a)\n  }\n\n  arrMatch(str: string | any[], arr: string | any[]) {\n    let count = 0;\n    let list = [];\n\n    for (let i = 0; i < arr.length; i++) if (str.includes(arr[i])) {\n      count++;\n      list.push(arr[i])\n    }\n    return { count, list };\n  }\n}","// @ CowSTD\nimport { chaosGl, NOOP, ANOOP } from './cst';\nimport { CowErr } from './CowErr';\n\nimport './global'\n\nvar checkEnvironment = () => {\n  let isImportSupported = false;\n  try {\n    eval('import.meta')\n    isImportSupported = true;\n  }\n  catch { }\n\n  if (isImportSupported) {\n    // ES Module environment\n    return 'ES Module';\n  }\n\n  else if (typeof module\n    !== 'undefined'\n    && module?.exports\n    && typeof window\n    === 'undefined') {\n    // Node.js environment\n    return 'Node';\n  }\n\n  else if (typeof window\n    !== 'undefined'\n    && typeof window?.document\n    !== 'undefined') {\n    // Browser environment\n    return 'Browser';\n  }\n\n  else {\n    // Unknown environment\n    return 'Unknown';\n  }\n}\n\n// @ CML\nimport { CML_Static } from './static';\n\ninterface CILElement {\n  c: string;\n  i: string | number;\n}\n\ninterface ChubNode {\n  tag: string,\n  id: string,\n  class: string,\n  content: string,\n  data: string,\n  style: string,\n  attr: string,\n  indent: number,\n}\n\ninterface SortedCILE extends CILElement {\n  children: SortedCILE[]\n  o?: ChubNode\n}\n\ntype CILEList = CILElement[];\ntype SortedCIL = SortedCILE[];\n\n/**\n * A ChubML instance.\n * \n * =-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-\n *\n * 2024\n * SpcFORK - ChubML\n * Copyright (c) SpcFORK\n * \n * =-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-\n *\n * ```go\n *       ,\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\",^,\"\"\"\"\"\"\"\"\"\"\"\",\n *     .l ?]]]]]]]]]]]]]]]].~.????????????.I\n *     \",!l]IIIIIIIIIIIIIIII,< ]]]]]]]]]]]] l\n *     l ]]]lllllllllllllIII:> ]]]]]]]]]]]] l\n *     l:iii>>>>>>>>>>>>>]]] ~ ]]]]]]]]]]]] l\n *     l`++++++++++++++++---.~ ]]]]]]]]]]]] l\n *     lIIIIIIIIIIIIIIIIIIII;~.??????----?? l\n *     lIlllllllllllllllllll:iI\"\"\"\"\"\",;:;''l;\".\n *     l;lllllllllllllllllll:l    '^,,Iii??]-i;\".\n *     `I,I:::::::::I,,,,,,,:`   ,;ii??]]]]]]]-i\",\n *      ,:iiiiiiiii:,          :IIii!!!!!!!?]]]I:\"\n *      l ]]]]]]]]] l           ^`````````l.]]]] i\n *      l ]]]]]]]]] l                   .`l.]]]]?.I\n *      l.?]]]]]]]] l         ,\"\"\"\"\"\"\"\"\";!!?]]]]] l\n *      `i ]]]]]]]] l        I.?????????-]]]]]]]I\";\n *       ;:I]]]]]]]l;\"\"\"\"\"\"\",! ]]]]]]]]]]]]]]]?!^;\n *        I,i-]]]]]]-???????.~ ]]]]]]]]]]]]]?!,,^\n *         ^IIi?-]]]]]]]]]]] ~ ]]]]]]]]]]??!,,^\n *           ^I\"I!!!!!!!!!!!\">:!!!!!!!!!!,\",^\n *              ^```````````^ ^``````````^\n * ```\n * \n * =-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-\n * \n * TODO:\n * - Make code cleaner/compact.\n * - Make ECSS.\n * - Create CHUBECSS Parser.\n * \n * =-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-\n * \n * TOUR:\n *   *Q-Sel:\n *   $()\n *   *Array matcher\n *       arrMatch\n *   *Parser:\n *     parse()\n *       -> sortInd()\n *       -> stringi()\n *\n * =-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-\n*/\nexport class ChubMLMod extends CML_Static {\n  static ChubML = ChubMLMod\n  ChubML = ChubMLMod\n\n  // @ Options\n  static {\n    chaosGl.chubinjected = NOOP\n    chaosGl.chubstart = NOOP\n\n    chaosGl.lastChub ||= \"\"\n    chaosGl.cbMode ||= \"\"\n\n    window.onload = () =>\n      chaosGl.chubstart?.()\n  }\n\n  s = CML_Static\n\n  styled = {} as Record<string, any>\n\n  #Rexps = () => this.s.Rexps\n  #initialFormat(str: string) {\n    let r = this.#Rexps\n    return str\n      .replace(r().lineWithComment, \"\")\n      .replace(r().formatspace2, \"\\n\")\n      .replace(r().formatspace1, \"\\n\")\n  }\n\n  #cascadeIndentList(str: string) {\n    let strLines = str.split(/;/);\n\n    let col = [] as CILEList\n\n    for (const line of strLines) col.push({\n      c: line.trim(),\n      i: line.search(/\\S/)\n    });\n\n    return col;\n  }\n\n  #sortCILIndent(contents: CILEList) {\n    const sortedContents = [];\n    let parentStack = [];\n\n    for (const content of contents) {\n      const currentIndent = content.i;\n      const currentContent = { c: content.c, i: currentIndent, children: [] };\n\n      while (parentStack.length > 0 && currentIndent <= parentStack[parentStack.length - 1].i)\n        parentStack.pop();\n\n      if (parentStack.length > 0) {\n        const parent = parentStack[parentStack.length - 1];\n        parent.children.push(currentContent);\n      } else {\n        sortedContents.push(currentContent);\n      }\n\n      parentStack.push(Object.assign(currentContent));\n    };\n\n    return sortedContents\n  }\n\n  #makeDef = (): ChubNode => ({\n    tag: \"\",\n    id: \"\",\n    class: \"\",\n    content: \"\",\n    data: \"\",\n    style: \"\",\n    attr: \"\",\n    indent: 0,\n  })\n\n  #makeIndexes = () => ({\n    str: 0,\n    tmp: 0,\n  })\n\n  #specialTags = [\n    'area',\n    'base',\n    'br',\n    'col',\n    'embed',\n    'hr',\n    'img',\n    'input',\n    'link',\n    'meta',\n    'param',\n    'source',\n    'track',\n    'wbr'\n  ]\n\n  #handleScript(scrmatch: string[] | null) {\n    const r = this.#Rexps;\n\n    let issrc = scrmatch![1].includes(\"src=\");\n    let execafter = scrmatch![1].includes(\"\\\"execafter\\\";\\n\");\n\n    var dostill = true;\n\n    const fetchScript = async (src: string) => fetch(src)\n      .then((js) => {\n        return js.text();\n      })\n      .then((text) => {\n        // Append a script tag to the body\n        try {\n          let script = document.createElement(\"script\");\n          script.type = \"text/javascript\";\n          script.text = text;\n          document.body.appendChild(script);\n        }\n        catch (error) { console.log(error, this.s.errorList.scripterror); }\n      });\n\n    // Source Check\n    if (issrc && scrmatch) {\n      let srcis = scrmatch![1].match(/src=\"(.*)\"/);\n      if (srcis) {\n        fetchScript(srcis[1]);\n\n        dostill = false;\n      }\n    }\n\n    // Eval content (not SRC).\n    if (scrmatch !== null && dostill) {\n      try { eval(scrmatch[1]) }\n      catch (error) { console.error(error, this.s.errorList.scripterror) }\n    }\n  }\n\n  #traverse(cil: SortedCILE, i: number, indexes: { str: any; tmp: number; }, v = ''): [SortedCILE, { str: number, tmp: number }] {\n    const r = this.#Rexps\n\n    let indentString = \"  \"\n\n    let str = cil.c\n    let isStr = str.search(r().betweenQuote)\n    let hasOpts = str.search(r().betweenCol)\n    let isscr = str.match(r().script)\n\n    let def = this.#makeDef()\n    let tempC = this.#makeDef()\n\n    // Script Operation\n    if (isscr !== null) {\n      this.#handleScript(r().script.exec(str));\n    }\n\n    if (isStr !== -1) {\n      let tempLines = str.split(r().betweenCol)\n      let content = str.split(r().betweenQuote)[1]\n\n      if (hasOpts == null) {\n        tempC = def\n      } else {\n        var inner = tempLines[1] || \"\"\n        this.#checkAttr(tempC, inner.split(\" \"))\n      }\n\n      indexes.str++\n      tempC.content = content\n    } else {\n      this.#checkAttr(tempC, str.split(\" \"))\n    }\n\n    var indc = indentString.repeat(i)\n\n    cil.o = tempC\n    cil.i = indc\n\n    if (cil.children) {\n      cil.children.forEach(child => this.#traverse(child, i + 1, indexes, v));\n    }\n\n    return [cil, indexes]\n  }\n\n  #checkAttr = (tempC: ChubNode, arr: any[]) => arr.forEach((param, pind) => {\n    // ATTR's\n    switch (param[0]) {\n      case \"#\":\n        this.#handleID(tempC, param);\n        break;\n\n      case \".\":\n        this.#handleClass(tempC, param);\n        break;\n\n      case \"$\":\n        let dataParam = this.attrSyn(param);\n        if (!dataParam) return;\n\n        let dataB = `data-${dataParam[0].slice(1) + \"=\\\"\" + dataParam[1] + \"\\\"\"}`;\n        tempC.data = `${tempC.data ? tempC.data + \" \" : \"\"}${dataB}`;\n        break;\n\n      case \"%\":\n        let attrParam = this.attrSyn(param);\n        if (!attrParam) return;\n\n        let attrB = `${attrParam[0].slice(1) + \"=\\\"\" + attrParam[1] + \"\\\"\"}`;\n        // console.log(attrB)\n        tempC.attr = `${tempC.attr ? tempC.attr + \" \" : \"\"}${attrB}`;\n\n        break;\n\n      case \"@\":\n        /*\n          We need to:\n \n          Extract the @val from the param.\n          If as params, get params.\n \n          E.G.\n          @fetchw=https://www.google.com\n        */\n        param = this.#handleAtCode(param, tempC);\n        break;\n\n      default:\n        tempC.tag = `${tempC.tag ? tempC.tag + \" \" : \"\"}${param}`;\n    }\n  })\n\n  #handleClass(tempC: ChubNode, param: any) {\n    tempC.class = `${tempC.class ? tempC.class + \" \" : \"\"}${param.replace(\".\", \" \")}`;\n  }\n\n  #handleID(tempC: ChubNode, param: any) {\n    tempC.id = `${tempC.id ? tempC.id + \" \" : \"\"}${param.replace(\"#\", \" \")}`;\n  }\n\n  #handleAtCode(param: any, tempC: ChubNode) {\n    console.log(\"using @\", `${param}`.slice(8), `${param}`.split(/[|:>=\\-\\)!~]/gm)[1].slice(1));\n\n    if (param.includes(\"fetchw\")) (async () => {\n      param = param.slice(8);\n\n      if (window?.location?.origin) {\n        param = `${param}`.includes(\"{{ORIG}}\")\n          ? param.replace(\"{{ORIG}}\", window.location.origin)\n          : param;\n      }\n\n      tempC.tag = tempC.tag\n        ? tempC.tag\n        : 'fetcherBlock';\n\n      tempC.data = (\n        `${tempC.data ? tempC.data + \" \" : \"\"}data-fetchw=\"${param}\"`\n        + ` data-instance=\"${new Date().getTime()}\"`\n      );\n\n      let fw = await fetch(await this.findFile([param])) || {\n        text: () => { return param; },\n      };\n\n      let fwtext = await fw.text();\n      tempC.content = `${fwtext ? fwtext : \"\"}`;\n\n      // If window is loaded before script end, replace content.\n      if (window?.location?.origin) {\n        let el = this.$(`[${tempC.data.split(' ').join('][')}]`)\n        if (el)\n          el.innerHTML = tempC.content.replace(/\\n/g, '\\n</br>\\n');\n      }\n    })();\n    return param;\n  }\n\n  #parseChubNode(cil: SortedCILE, opts = this.#makeIndexes()) {\n    const o = cil.o!\n    if (!o) throw new CowErr(`No CIL object found!`)\n\n    let isTemplate = false\n    let shorter = false\n\n    let specialfind = this.arrMatch(o.tag, this.#specialTags)\n    let isSpecial = specialfind.count\n    let inList = specialfind.list\n\n    let html = ''\n\n    this.#parseTemplates(cil, opts);\n\n    html = `\\n${cil.i}<${o.tag}`;\n\n    const is = (v: any) => !!v\n    const addTo = (v: any) => html += v\n\n    switch (true) {\n      // case !!o().class: html += ` class=\"${o().class.slice(1)}\"`\n      case is(o.class): addTo(` class=\"${o.class\n        }\"`)\n      case is(o.id): addTo(` id=\"${o.id}\"`)\n      case is(o.style): addTo(` style=\"${o.style}\"`)\n      case is(o.data): addTo(` ${o.data}`)\n      case is(o.attr): addTo(` ${o.attr}`)\n    }\n\n    if (isSpecial > 0) shorter = true\n\n    html += shorter\n      ? \" />\\n\"\n      : \">\\n\";\n\n    // This is enough for certain tags.\n    for (const child of cil.children) switch (child.c[0]) {\n      case \"\\\"\":\n        html += child.i + child.c.slice(1, child.c.length - 1);\n        break;\n\n      default:\n        html += child.i + this.#parseChubNode(child, opts);\n    }\n\n    html += !shorter\n      ? `\\n${cil.i}</${o.tag}>\\n`\n      : \"\\n\"\n\n    // Â¯\\_(ãƒ„)_/Â¯ Quickest fix.\n    if (html.search(\"<>\")) html = html\n      .replace(\"<>\", \"\")\n      .replace(\"</>\", \"\")\n\n    if (html.includes(\"head\")) {\n\n      for (let stydm in this.styled) {\n        if (this.styled[stydm] === true && this.styled.styles[stydm]) {\n          html = html.replace(\"<head>\", \"<head>\\n\" + this.styled.styles[stydm])\n\n          // Set to \"has\" since we check earlier if the value is false to define it\n          // Also, might use later, need to exist, not be true.\n          this.styled[stydm] = \"has\"\n        }\n      }\n\n    }\n\n    return html\n  }\n\n  #parseTemplates(cil: SortedCILE, opts = this.#makeIndexes()) {\n    const { o } = cil\n    if (!o) throw new CowErr(`No CIL object found!`)\n    switch (o.tag) {\n\n    }\n  }\n\n  #constuctFrom(cil: SortedCILE, v = '') {\n    let indexes = this.#makeIndexes()\n\n    let travRes = this.#traverse(cil, 0, indexes, v);\n\n    // @Crossover\n    { [cil, indexes] = travRes }\n\n    let res = this.#parseChubNode(cil, indexes)\n\n    return res\n  }\n\n  parse(source: string) {\n    let str = this.#initialFormat(source)\n\n    let indList = this.#cascadeIndentList(str)\n\n    let sorted = this.#sortCILIndent(indList);\n\n    return this.#constuctFrom(sorted[0]);\n  }\n\n  async findFile(fileLocations: any) {\n    for (const location of fileLocations) {\n      try {\n        const response = await fetch(location);\n\n        // Check if the response was successful (status code in the range of 200-299)\n        if (response.ok) {\n          return location; // Return the valid file location\n        }\n      } catch (error) {\n        // Handle any errors that occur during the fetch request\n        console.error(`Error fetching file from '${location}':`, error);\n      }\n    }\n\n    // Return null if no valid file location was found\n    return null;\n  }\n\n  ChubRep(doc: string, quirky = \"<!DOCTYPE html>\") {\n    (doc as any) = this.parse(doc);\n    document.open();\n    document.write(quirky + '\\n' + doc);\n    document.close();\n  }\n\n  injectChub(input: string) {\n    // var input = `\n    // div;\n    //   \"wow, im super simple. <br>\n    //   and supper COOOL!\";\n    //   hr #wow $hey=lol .very .omg .neat %omg=js|is|cool;\n    //   :Super .cool: \"WOOO!\";\n    //     span .woah;\n    //       \"wow!\";\n    // `;\n\n    var htmlCode = this.parse(input);\n\n    if (chaosGl.chubDev == true) console.log(htmlCode)\n\n    let locationB = chaosGl.chubLocation || \"chub\"\n    let locationGot = this.$(locationB)\n    if (!locationGot) locationB = \"body\"\n    else locationGot.innerHTML = htmlCode;\n\n    // On finish, run finish.\n    chaosGl.chubinjected?.(locationGot);\n  }\n\n  Router = class Router {\n    __env__ = checkEnvironment();\n\n    constructor() {\n      switch (this.__env__) {\n        case \"Node\":\n          break;\n        case \"Browser\":\n          break;\n      }\n    }\n\n  }\n\n  // Reformat Attributes to prevent conflicts and such.\n  CHUBfax(tex: string, sep = \" \") {\n    let modtxt = tex || \"\";\n    modtxt = modtxt\n      .replace(\"=\", \"|e\")\n      .replace(\";\", \"|col\")\n      .replace(\"\\\"\", \"|qw\")\n      .replace(sep, \"|\")\n\n    return modtxt\n  }\n\n  attrSyn(tex: string) {\n    try {\n      if (`${tex}`.match(/=/gm)!?.length > 1) throw this.s.errorList.eqspl3\n\n      let attrParam = tex\n        // Tokenize\n        .replace(\"=\", \" spcfork.Equals.Token \")\n        .replace(\"\\\\|\", \" spcfork.Pipe.Token \")\n\n        .replace(/\\|e/gm, \"=\")\n        .replace(/\\|col/gm, \";\")\n        .replace(/\\|qw/gm, \"\\\"\")\n        .replace(/\\|/gm, \" \")\n\n        .replace(\" spcfork.Pipe.Token \", \"|\")\n\n        // Split at Token to prevent multiple splits.\n        .split(\" spcfork.Equals.Token \")\n\n      // console.log(attrParam.length, attrParam)\n      return attrParam\n    } catch { }\n  }\n\n  /**\n   * Fetch a web page and convert it to CHUB\n   * @param {string} url The URL of the web page to fetch\n   * @returns The CHUB representation of the web page\n   */\n  async CHUBWFetch(url: string | URL | Request): Promise<string> {\n    const response = await fetch(url);\n    if (!response?.ok)\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    const html = await response.text();\n    console.log(this.htmlToChub(html));\n    return this.htmlToChub(html);\n  }\n\n  getURLbit() {\n    var url = window.location.href;\n    var parts = url.split('/');\n    var lastPart = parts[parts.length - 1];\n\n    return lastPart;\n  }\n\n  CHUBsanitize(input: string) {\n    var element = document.createElement('div');\n    element.innerText = input;\n    var sanitizedInput = element.innerHTML;\n    return sanitizedInput;\n  }\n\n  DupeCollection = {} as Record<string, any>\n  /**\n   * @param {string} dupe - The dupe to be added to the collection.\n   * @returns {object} - The edited dupe, the dupe collection, and the stringified and parsed collection.\n   */\n  CHUBduper(dupe: string = \"p;\"): object {\n    if (!this.DupeCollection) {\n      this.DupeCollection = {};\n    }\n\n    if (this.DupeCollection[dupe] !== undefined) {\n      this.DupeCollection[dupe] += 1;\n    } else {\n      this.DupeCollection[dupe] = 0;\n    }\n\n    let editedDupe;\n    if (dupe.includes(\";\")) {\n      let d = dupe.split(\";\");\n      d[0] += ` #${this.DupeCollection[dupe]}`;\n      editedDupe = d.join(\"\");\n    } else {\n      editedDupe = dupe + \";\";\n    }\n\n    return {\n      editedDupe,\n      D: this.DupeCollection,\n      s: (() => JSON.stringify(this.DupeCollection)),\n      c: (() => JSON.parse(JSON.stringify(this.DupeCollection))),\n    };\n  }\n\n  CHUBstrprep(str: string) {\n    return str\n      .replace(/[.*+?^${}()|[\\]\\\\\"';:]/g, '\\\\$&')\n      .replace(/[;]/g, '|col')\n  }\n\n  CHUBunmess(str: string) {\n    const escapedStr = str.replace(/\\\\\\\"/g, '\"');\n    const unescapedStr = escapedStr.replace(/\\\\\\|col/g, ',');\n\n    return [\n      unescapedStr,\n      JSON.parse(unescapedStr),\n    ]\n  }\n\n  // ARARARAR\n  htmlToChub = (html: string, delim = \"\") => {\n    const doc = new DOMParser().parseFromString(html, 'text/html');\n\n    return this.#getChubML(doc.documentElement, '', delim)\n  }\n\n  #getChubML = (node: Element, indent = '', delim = '') => {\n    let chubML = '';\n\n    // Process node name\n    chubML += `${indent}${node.nodeName.toLowerCase()}`;\n\n    // Process attributes\n\n    if (node.attributes.length > 0) {\n      const attrs = Array.from(node.attributes);\n      chubML = this.#handleAttr(attrs, chubML);\n    }\n\n    // Process child nodes\n    if (node.childNodes.length > 0)\n      chubML = this.#handleChildren(chubML, node, indent, delim);\n    else\n      chubML += ';\\n';\n\n    return chubML;\n  }\n\n  #handleChildTextNode(child: Element, indent: string) {\n    if (!child.textContent) return '';\n    let t = child.textContent.trim();\n    if (t != \"\") return `${indent}  \"${t}\";\\n`;\n  }\n\n  #handleChildren(chubML: string, node: Element, indent: string, delim: string) {\n    chubML += ';\\n';\n    const childNodes = Array.from(node.childNodes);\n    for (const child of childNodes) switch (child.nodeType) {\n      case Node.TEXT_NODE:\n        chubML += this.#handleChildTextNode(child as Element, indent);\n        break;\n      case Node.ELEMENT_NODE:\n        chubML += this.#getChubML(child as Element, indent + '  ', delim);\n        break;\n    }\n    chubML += `${indent}${delim}\\n`;\n    return chubML;\n  }\n\n  #handleAttr(attrs: Attr[], chubML: string) {\n    const cfv = (attr: Attr) => this.CHUBfax(attr.value)\n    for (const attr of attrs) switch (attr.name.toLowerCase()) {\n      case 'class':\n        chubML += ` .${cfv(attr)}`;\n        break;\n      case 'id':\n        chubML += ` #${cfv(attr)}`;\n\n      default: chubML += ` %${attr.name}=${cfv(attr)}`;\n    }\n    return chubML;\n  }\n\n  constructor() {\n    super()\n\n    try { this.#elevateToWindow() } catch { }\n  }\n\n  #elevateToWindow() {\n    \n  }\n}\n\nconst chubml = new ChubMLMod;\n\n// @ Exporter\ntry { module.exports = chubml } catch { }\ntry { chaosGl.window.ChubML = chubml } catch { }"],"mappings":"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","names":["r"]}