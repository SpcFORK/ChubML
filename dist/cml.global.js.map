{"version":3,"sources":["../src/cst.ts","../src/CowErr.ts","../src/static.ts","../src/cml.ts"],"sourcesContent":["\nexport const chaosGl = globalThis as any;\n\nexport const NOOP = (): any => { };\nexport const ANOOP = async (): Promise<any> => { };\n","export class CowErr extends Error {\n  constructor(message: string | (string | undefined)[], ext?: string) {\n    super(Array.isArray(message) ? message.join('\\n') : message);\n\n    this.name = \"CowErr\"\n      + (ext ? ` (${ext})` : \"\");\n  }\n\n  toss = (...params: any[]) => console.error(this, ...params);\n\n  throw() {\n    throw this;\n  }\n}","import { chaosGl, NOOP, ANOOP } from './cst';\n\nimport { CowErr } from './CowErr';\nimport { CowObj, CowObject } from './CowObj'\n\nexport class CML_Static {\n  static CML_Static = CML_Static\n  CML_Static = CML_Static\n\n  static errorList = {\n    // For Params: %lol=haha=asd => split at each `=` => greater than 3? => error.\n    eqspl3: new CowErr([\n      `You can't have more than 3 Equals characters (\\`=\\`)!`,\n      `Try to shorten it please, use \\`|e\\``,\n      `it is the escaped version of \\`=\\`.`,\n      ,\n      `Use: \"meta %name=viewport %content=width|edevice-width;\"`,\n      `=> \\`|e\\` replaced with \\`=\\``,\n      `=> \"meta %name=viewport %content=width=device-width;\"`\n    ]),\n\n    scripterror: new CowErr([\n      `Apparently, you made an error loading or executing your script.`,\n      `Look back and take a gander.`,\n      ,\n      `Potentially:`,\n      `=> Check if you loaded the right file.`,\n      `=> Check if you made a typo.`,\n      `=> Check if you did not add the directory to the file.`,\n      `=> Check if you did every thing else right.`,\n      ,\n      `=> If all else.cry :(`\n    ]),\n\n  }\n\n  static DisplayErrors = {\n    noBeam: `\n  c;\n    beam;\n      \"Beam Failed!\n      <br>\n      Try to fix the simple Fetch error.\n      <br>\n      Shouldn't take long.\";\n    `,\n  }\n\n  static Rexps = {\n    quoteExept: /\\n(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/gm,\n    colExept: /\\n(?=(?:(?:[^:]*:){2})*[^:]*$)/gm,\n\n    betweenQuote: /\"([a-zA-Z\\s\\S]+)\"/gm,\n    betweenCol: /^:([a-zA-Z\\S\\s]+):/gm,\n\n    script: /\\{\\=([a-zA-Z\\S\\s][^;]+)\\=\\}/gm,\n    comment: /\\/\\/(.*)\\n{0,1}/gm,\n    lineWithComment: /[^a-zA-Z0-9:-â– \\n]+((?:[\\t ]{0,})\\/\\/(?:.*)\\n{0,1})/gm,\n\n    formatspace1: /\\n{1,}/gm,\n    formatspace2: /\\n[\\t \\n]{0,}\\n/gm,\n  }\n\n  $<T extends Element>(a: string) {\n    return document.querySelector<T>(a)\n  }\n\n  arrMatch(str: string | any[], arr: string | any[]) {\n    let count = 0;\n    let list = [];\n\n    for (let i = 0; i < arr.length; i++) if (str.includes(arr[i])) {\n      count++;\n      list.push(arr[i])\n    }\n    return { count, list };\n  }\n}","// @ CowSTD\nimport { chaosGl, NOOP, ANOOP } from './cst';\nimport { CowErr } from './CowErr';\n\n// @ CML\nimport { CML_Static } from './static';\n\ninterface CILElement {\n  c: string;\n  i: number;\n}\n\ninterface SortedCILE extends CILElement {\n  children: SortedCIL[]\n}\n\ntype CILEList = CILElement[];\ntype SortedCIL = SortedCILE[];\n\n/**\n * A ChubML instance.\n * \n * =-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-\n *\n * 2024\n * SpcFORK - ChubML\n * Copyright (c) SpcFORK\n * \n * =-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-\n *\n * ```go\n *       ,\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\",^,\"\"\"\"\"\"\"\"\"\"\"\",\n *     .l ?]]]]]]]]]]]]]]]].~.????????????.I\n *     \",!l]IIIIIIIIIIIIIIII,< ]]]]]]]]]]]] l\n *     l ]]]lllllllllllllIII:> ]]]]]]]]]]]] l\n *     l:iii>>>>>>>>>>>>>]]] ~ ]]]]]]]]]]]] l\n *     l`++++++++++++++++---.~ ]]]]]]]]]]]] l\n *     lIIIIIIIIIIIIIIIIIIII;~.??????----?? l\n *     lIlllllllllllllllllll:iI\"\"\"\"\"\",;:;''l;\".\n *     l;lllllllllllllllllll:l    '^,,Iii??]-i;\".\n *     `I,I:::::::::I,,,,,,,:`   ,;ii??]]]]]]]-i\",\n *      ,:iiiiiiiii:,          :IIii!!!!!!!?]]]I:\"\n *      l ]]]]]]]]] l           ^`````````l.]]]] i\n *      l ]]]]]]]]] l                   .`l.]]]]?.I\n *      l.?]]]]]]]] l         ,\"\"\"\"\"\"\"\"\";!!?]]]]] l\n *      `i ]]]]]]]] l        I.?????????-]]]]]]]I\";\n *       ;:I]]]]]]]l;\"\"\"\"\"\"\",! ]]]]]]]]]]]]]]]?!^;\n *        I,i-]]]]]]-???????.~ ]]]]]]]]]]]]]?!,,^\n *         ^IIi?-]]]]]]]]]]] ~ ]]]]]]]]]]??!,,^\n *           ^I\"I!!!!!!!!!!!\">:!!!!!!!!!!,\",^\n *              ^```````````^ ^``````````^\n * ```\n * \n * =-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-\n * \n * TODO:\n * - Make code cleaner/compact.\n * - Make ECSS.\n * - Create CHUBECSS Parser.\n * \n * =-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-\n * \n * TOUR:\n *   *Q-Sel:\n *   $()\n *   *Array matcher\n *       arrMatch\n *   *Parser:\n *     parse()\n *       -> sortInd()\n *       -> stringi()\n *\n * =-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-\n*/\nclass ChubMLMod extends CML_Static {\n  static ChubML = ChubMLMod\n  ChubML = ChubMLMod\n\n  // @ Options\n  static {\n    chaosGl.chubstart = () => { }\n    window.onload = () =>\n      chaosGl.chubstart?.()\n  }\n\n  s = CML_Static\n\n  styled = {}\n\n  #Rexps = () => this.s.Rexps\n  #initialFormat(str: string) {\n    let r = this.#Rexps\n    return str\n      .replace(r().lineWithComment, \"\")\n      .replace(r().formatspace2, \"\\n\")\n      .replace(r().formatspace1, \"\\n\")\n  }\n\n  #cascadeIndentList(str: string) {\n    let strLines = str.split(/;/);\n\n    let col = [] as CILEList\n\n    for (const line of strLines) col.push({\n      c: line.trim(),\n      i: line.search(/\\S/)\n    });\n\n    return col;\n  }\n\n  #sortCILIndent(contents: CILEList): SortedCILE | undefined {\n    const sortedContents = [];\n    let parentStack = [];\n\n    for (const content of contents) {\n      const currentIndent = content.i;\n      const currentContent = { c: content.c, i: currentIndent, children: [] };\n\n      while (parentStack.length > 0 && currentIndent <= parentStack[parentStack.length - 1].i)\n        parentStack.pop();\n\n      if (parentStack.length > 0) {\n        const parent = parentStack[parentStack.length - 1];\n        parent.children.push(currentContent);\n      } else {\n        sortedContents.push(currentContent);\n      }\n\n      parentStack.push(Object.assign(currentContent));\n    };\n\n    return sortedContents.shift();\n  }\n\n  #parseCIL(cil: CILEList, v = '') {\n\n    let [parsedCILArr, indexes] = this.#traverse(cil, 0, v);\n\n    // return this.#compile(parsedCILArr);\n  }\n\n  #makeDef = () => ({\n    tag: \"\",\n    id: \"\",\n    class: \"\",\n    content: \"\",\n    data: \"\",\n    attr: \"\",\n    indent: 0,\n  })\n\n  #traverse(cil: CILEList, i: number, v = '') {\n    let cilCopy = cil.slice();\n    let indentString = \"  \"\n    let indexes = {\n      str: 0,\n      tmp: 0,\n    }\n\n    let r = this.#Rexps\n    let cnt = cil.c\n\n    let def = this.#makeDef()\n    let tempDef = this.#makeDef()\n\n    // let isStr = cnt.search(reg.betweenQuote)\n    // let hasOpts = strBuild.search(reg.betweenCol)\n    // let isscr = strBuild.match(reg.script)\n\n    return [cilCopy, indexes]\n  }\n\n  parse(source: string) {\n    let str = this.#initialFormat(source)\n\n    let indList = this.#cascadeIndentList(str)\n\n    this.#parseCIL(indList)\n  }\n}\n\n// @ Exporter\ntry { module.exports = new ChubMLMod } catch { }\ntry { chaosGl.window.ChubML = new ChubMLMod } catch { }\nexport { ChubMLMod }"],"mappings":";;;AACO,MAAM,UAAU;;;ACDhB,MAAM,SAAN,cAAqB,MAAM;AAAA,IAChC,YAAY,SAA0C,KAAc;AAClE,YAAM,MAAM,QAAQ,OAAO,IAAI,QAAQ,KAAK,IAAI,IAAI,OAAO;AAE3D,WAAK,OAAO,YACP,MAAM,KAAK,GAAG,MAAM;AAAA,IAC3B;AAAA,IAEA,OAAO,IAAI,WAAkB,QAAQ,MAAM,MAAM,GAAG,MAAM;AAAA,IAE1D,QAAQ;AACN,YAAM;AAAA,IACR;AAAA,EACF;;;ACRO,MAAM,aAAN,MAAM,YAAW;AAAA,IACtB,OAAO,aAAa;AAAA,IACpB,aAAa;AAAA,IAEb,OAAO,YAAY;AAAA;AAAA,MAEjB,QAAQ,IAAI,OAAO;AAAA,QACjB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AAAA,MAED,aAAa,IAAI,OAAO;AAAA,QACtB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IAEH;AAAA,IAEA,OAAO,gBAAgB;AAAA,MACrB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASV;AAAA,IAEA,OAAO,QAAQ;AAAA,MACb,YAAY;AAAA,MACZ,UAAU;AAAA,MAEV,cAAc;AAAA,MACd,YAAY;AAAA,MAEZ,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,iBAAiB;AAAA,MAEjB,cAAc;AAAA,MACd,cAAc;AAAA,IAChB;AAAA,IAEA,EAAqB,GAAW;AAC9B,aAAO,SAAS,cAAiB,CAAC;AAAA,IACpC;AAAA,IAEA,SAAS,KAAqB,KAAqB;AACjD,UAAI,QAAQ;AACZ,UAAI,OAAO,CAAC;AAEZ,eAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,IAAK,KAAI,IAAI,SAAS,IAAI,CAAC,CAAC,GAAG;AAC7D;AACA,aAAK,KAAK,IAAI,CAAC,CAAC;AAAA,MAClB;AACA,aAAO,EAAE,OAAO,KAAK;AAAA,IACvB;AAAA,EACF;;;ACHA,MAAM,YAAN,MAAM,mBAAkB,WAAW;AAAA,IACjC,OAAO,SAAS;AAAA,IAChB,SAAS;AAAA,IAGT,OAAO;AACL,cAAQ,YAAY,MAAM;AAAA,MAAE;AAC5B,aAAO,SAAS,MACd,QAAQ,YAAY;AAAA,IACxB;AAAA,IAEA,IAAI;AAAA,IAEJ,SAAS,CAAC;AAAA,IAEV,SAAS,MAAM,KAAK,EAAE;AAAA,IACtB,eAAe,KAAa;AAC1B,UAAI,IAAI,KAAK;AACb,aAAO,IACJ,QAAQ,EAAE,EAAE,iBAAiB,EAAE,EAC/B,QAAQ,EAAE,EAAE,cAAc,IAAI,EAC9B,QAAQ,EAAE,EAAE,cAAc,IAAI;AAAA,IACnC;AAAA,IAEA,mBAAmB,KAAa;AAC9B,UAAI,WAAW,IAAI,MAAM,GAAG;AAE5B,UAAI,MAAM,CAAC;AAEX,iBAAW,QAAQ,SAAU,KAAI,KAAK;AAAA,QACpC,GAAG,KAAK,KAAK;AAAA,QACb,GAAG,KAAK,OAAO,IAAI;AAAA,MACrB,CAAC;AAED,aAAO;AAAA,IACT;AAAA,IAEA,eAAe,UAA4C;AACzD,YAAM,iBAAiB,CAAC;AACxB,UAAI,cAAc,CAAC;AAEnB,iBAAW,WAAW,UAAU;AAC9B,cAAM,gBAAgB,QAAQ;AAC9B,cAAM,iBAAiB,EAAE,GAAG,QAAQ,GAAG,GAAG,eAAe,UAAU,CAAC,EAAE;AAEtE,eAAO,YAAY,SAAS,KAAK,iBAAiB,YAAY,YAAY,SAAS,CAAC,EAAE;AACpF,sBAAY,IAAI;AAElB,YAAI,YAAY,SAAS,GAAG;AAC1B,gBAAM,SAAS,YAAY,YAAY,SAAS,CAAC;AACjD,iBAAO,SAAS,KAAK,cAAc;AAAA,QACrC,OAAO;AACL,yBAAe,KAAK,cAAc;AAAA,QACpC;AAEA,oBAAY,KAAK,OAAO,OAAO,cAAc,CAAC;AAAA,MAChD;AAAC;AAED,aAAO,eAAe,MAAM;AAAA,IAC9B;AAAA,IAEA,UAAU,KAAe,IAAI,IAAI;AAE/B,UAAI,CAAC,cAAc,OAAO,IAAI,KAAK,UAAU,KAAK,GAAG,CAAC;AAAA,IAGxD;AAAA,IAEA,WAAW,OAAO;AAAA,MAChB,KAAK;AAAA,MACL,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,SAAS;AAAA,MACT,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,IACV;AAAA,IAEA,UAAU,KAAe,GAAW,IAAI,IAAI;AAC1C,UAAI,UAAU,IAAI,MAAM;AACxB,UAAI,eAAe;AACnB,UAAI,UAAU;AAAA,QACZ,KAAK;AAAA,QACL,KAAK;AAAA,MACP;AAEA,UAAI,IAAI,KAAK;AACb,UAAI,MAAM,IAAI;AAEd,UAAI,MAAM,KAAK,SAAS;AACxB,UAAI,UAAU,KAAK,SAAS;AAM5B,aAAO,CAAC,SAAS,OAAO;AAAA,IAC1B;AAAA,IAEA,MAAM,QAAgB;AACpB,UAAI,MAAM,KAAK,eAAe,MAAM;AAEpC,UAAI,UAAU,KAAK,mBAAmB,GAAG;AAEzC,WAAK,UAAU,OAAO;AAAA,IACxB;AAAA,EACF;AAGA,MAAI;AAAE,WAAO,UAAU,IAAI;AAAA,EAAU,QAAQ;AAAA,EAAE;AAC/C,MAAI;AAAE,YAAQ,OAAO,SAAS,IAAI;AAAA,EAAU,QAAQ;AAAA,EAAE;","names":[]}