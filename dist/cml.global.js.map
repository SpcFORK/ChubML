{"version":3,"sources":["../src/cst.ts","../src/CowErr.ts","../src/static.ts","../src/CustomEventHandle.ts","../src/checkEnvironment.ts","../src/cml.ts"],"sourcesContent":["export const chaosGl = globalThis as any;\nexport const chaosEval = chaosGl.eval;\n\nexport const NOOP = (): any => { };\nexport const ANOOP = async (): Promise<any> => { };\n","export class CowErr extends Error {\n  constructor(message: string | (string | undefined)[], ext?: string) {\n    super(Array.isArray(message) ? message.join('\\n') : message);\n\n    this.name = \"CowErr\"\n      + (ext ? ` (${ext})` : \"\");\n  }\n\n  toss = (...params: any[]) => console.error(this, ...params);\n\n  throw() {\n    throw this;\n  }\n}","import { chaosGl, NOOP, ANOOP } from './cst';\n\nimport { CowErr } from './CowErr';\nimport { CowObj, CowObject } from './CowObj'\n\nexport class CML_Static {\n  static CML_Static = CML_Static\n  CML_Static = CML_Static\n\n  static errorList = {\n    // For Params: %lol=haha=asd => split at each `=` => greater than 3? => error.\n    eqspl3: new CowErr([\n      `You can't have 3 Equals characters (\\`=\\`)!`,\n      `Try to shorten it please, use \\`|e\\``,\n      `it is the escaped version of \\`=\\`.`,\n      ,\n      `Use: \"meta %name=viewport %content=width|edevice-width;\"`,\n      `=> \\`|e\\` replaced with \\`=\\``,\n      `=> \"meta %name=viewport %content=width=device-width;\"`\n    ]),\n\n    scripterror: new CowErr([\n      `Apparently, you made an error loading or executing your script.`,\n      `Look back and take a gander.`,\n      ,\n      `Potentially:`,\n      `=> Check if you loaded the right file.`,\n      `=> Check if you made a typo.`,\n      `=> Check if you did not add the directory to the file.`,\n      `=> Check if you did every thing else right.`,\n      ,\n      `=> If all else.cry :(`\n    ]),\n\n  }\n\n  static DisplayErrors = {\n    noBeam: `\n  c;\n    beam;\n      \"Beam Failed!\n      <br>\n      Try to fix the simple Fetch error.\n      <br>\n      Shouldn't take long.\";\n    `,\n  }\n\n  static Rexps = {\n    quoteExept: /\\n(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/gm,\n    colExept: /\\n(?=(?:(?:[^:]*:){2})*[^:]*$)/gm,\n\n    betweenQuote: /\"([a-zA-Z\\s\\S]+)\"/gm,\n    betweenCol: /^:([a-zA-Z\\S\\s]+):/gm,\n\n    script: /\\{\\=([a-zA-Z\\S\\s][^;]+)\\=\\}/gm,\n    comment: /\\/\\/(.*)\\n{0,1}/gm,\n    lineWithComment: /[^a-zA-Z0-9:-â– \\n]+((?:[\\t ]{0,})\\/\\/(?:.*)\\n{0,1})/gm,\n\n    formatspace1: /\\n{1,}/gm,\n    formatspace2: /\\n[\\t \\n]{0,}\\n/gm,\n  }\n\n  $<T extends Element>(a: string) {\n    return document.querySelector<T>(a)\n  }\n\n  arrMatch(str: string | any[], arr: string | any[]) {\n    let count = 0;\n    let list = [];\n\n    for (let i = 0; i < arr.length; i++) if (str.includes(arr[i])) {\n      count++;\n      list.push(arr[i])\n    }\n    return { count, list };\n  }\n}","import { chaosGl } from './cst';\n\nexport class CustomEventHandle {\n  #globalBus = [] as Function[];\n\n  #setHandle = (e: Function) => {\n    this.#globalBus.push(e);\n  };\n\n  #removeHandler = (e: Function) => this.#globalBus.splice(this.#globalBus.indexOf(e), 1);\n\n  #clearHandler = () => this.#globalBus = [];\n\n  #addHandler = (e: Function) => this.#globalBus.push(e);\n\n  private = false\n  #getHandle = () => ({\n    event: this.event,\n\n    globals: this.#globalBus,\n    remove: this.#removeHandler,\n    clear: this.#clearHandler,\n    add: this.#addHandler,\n    _: () => !this.private ? this : null,\n\n    [Symbol.toStringTag]: 'CustomEventHandle'\n  });\n\n  #makeHandle = (name: string): PropertyDescriptor => ({\n    set: this.#setHandle,\n    get: this.#getHandle\n  });\n\n  #activateGlobalSets = () =>\n    Object.defineProperty(chaosGl, this.event, this.#makeHandle(this.event));\n\n  #init() {\n    this.#activateGlobalSets();\n  }\n\n  get detail() {\n    return this.#e.detail;\n  }\n  set detail(value) {\n    this.makeEvent(this.event, value)\n  }\n\n  #e: CustomEvent;\n\n  makeEvent(name: string, detail: { detail?: unknown } & Record<string, unknown> = {}) {\n    return this.#e = new CustomEvent(name, { detail });\n  }\n\n  activate() {\n    for (const cb of this.#globalBus) cb(this.#e);\n    dispatchEvent(this.#e)\n  }\n\n  constructor(\n    public event: string,\n  ) {\n    this.#e = new CustomEvent(event);\n    this.#init();\n  }\n}\n","import { chaosEval } from './cst';\n\nexport var checkEnvironment = () => {\n  let isImportSupported = false;\n  try {\n    chaosEval('import.meta');\n    isImportSupported = true;\n  }\n  catch { }\n\n  if (isImportSupported) {\n    // ES Module environment\n    return 'ES Module';\n  }\n\n  else if (typeof module\n    !== 'undefined'\n    && module?.exports\n    && typeof window\n    === 'undefined') {\n    // Node.js environment\n    return 'Node';\n  }\n\n  else if (typeof window\n    !== 'undefined'\n    && typeof window?.document\n    !== 'undefined') {\n    // Browser environment\n    return 'Browser';\n  }\n\n  else {\n    // Unknown environment\n    return 'Unknown';\n  }\n};\n","// @ CowSTD\nimport { chaosGl, chaosEval, NOOP, ANOOP } from './cst';\nimport { CowErr } from './CowErr';\n\nimport '../global'\n\n// @ CML\nimport { CML_Static } from './static';\nimport { CustomEventHandle } from './CustomEventHandle';\nimport { CILEList, ChubNode, SortedCILE } from './CILEList';\nimport { checkEnvironment } from './checkEnvironment';\n\n/**\n * A ChubML instance.\n * \n * =-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-\n *\n * 2024\n * SpcFORK - ChubML\n * Copyright (c) SpcFORK\n * \n * =-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-\n *\n * ```go\n *       ,\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\",^,\"\"\"\"\"\"\"\"\"\"\"\",\n *     .l ?]]]]]]]]]]]]]]]].~.????????????.I\n *     \",!l]IIIIIIIIIIIIIIII,< ]]]]]]]]]]]] l\n *     l ]]]lllllllllllllIII:> ]]]]]]]]]]]] l\n *     l:iii>>>>>>>>>>>>>]]] ~ ]]]]]]]]]]]] l\n *     l`++++++++++++++++---.~ ]]]]]]]]]]]] l\n *     lIIIIIIIIIIIIIIIIIIII;~.??????----?? l\n *     lIlllllllllllllllllll:iI\"\"\"\"\"\",;:;''l;\".\n *     l;lllllllllllllllllll:l    '^,,Iii??]-i;\".\n *     `I,I:::::::::I,,,,,,,:`   ,;ii??]]]]]]]-i\",\n *      ,:iiiiiiiii:,          :IIii!!!!!!!?]]]I:\"\n *      l ]]]]]]]]] l           ^`````````l.]]]] i\n *      l ]]]]]]]]] l                   .`l.]]]]?.I\n *      l.?]]]]]]]] l         ,\"\"\"\"\"\"\"\"\";!!?]]]]] l\n *      `i ]]]]]]]] l        I.?????????-]]]]]]]I\";\n *       ;:I]]]]]]]l;\"\"\"\"\"\"\",! ]]]]]]]]]]]]]]]?!^;\n *        I,i-]]]]]]-???????.~ ]]]]]]]]]]]]]?!,,^\n *         ^IIi?-]]]]]]]]]]] ~ ]]]]]]]]]]??!,,^\n *           ^I\"I!!!!!!!!!!!\">:!!!!!!!!!!,\",^\n *              ^```````````^ ^``````````^\n * ```\n * \n * =-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-\n * \n * TODO:\n * - Make code cleaner/compact.\n * - Make ECSS.\n * - Create CHUBECSS Parser.\n * \n * =-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-\n * \n * TOUR:\n *   *Q-Sel:\n *   $()\n *   *Array matcher\n *       arrMatch\n *   *Parser:\n *     parse()\n *       -> sortInd()\n *       -> stringi()\n *\n * =-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-\n*/\nexport class ChubMLMod extends CML_Static {\n  static ChubML = ChubMLMod\n  ChubML = ChubMLMod\n\n  static #ChubStarted = new CustomEventHandle('chubstart');\n  static #ChubInjected = new CustomEventHandle('chubinjected');\n\n  // @ Options\n  static {\n    chaosGl.lastChub ||= \"\"\n    chaosGl.cbMode ||= \"\"\n    chaosGl.chubLocation ||= \"\"\n\n    window.onload = () => {\n      this.#ChubStarted.detail = this\n      this.#ChubStarted.activate();\n    }\n  }\n\n  #makeDef = (): ChubNode => ({\n    tag: \"\",\n    id: \"\",\n    class: \"\",\n    content: \"\",\n    data: \"\",\n    style: \"\",\n    attr: \"\",\n    indent: 0,\n  })\n\n  #makeIndexes = () => ({\n    str: 0,\n    tmp: 0,\n  })\n\n  #specialTags = [\n    'area',\n    'base',\n    'br',\n    'col',\n    'embed',\n    'hr',\n    'img',\n    'input',\n    'link',\n    'meta',\n    'param',\n    'source',\n    'track',\n    'wbr'\n  ]\n\n  get doc() {\n    return document\n  }\n\n  #setOrAppend(val: string | Element, p: Element) {\n    if (typeof val === 'string') this.body.innerHTML = val\n    else this.body.appendChild(val)\n  }\n\n  get body() {\n    return document.body\n  }\n  set body(val) {\n    this.#setOrAppend(val, this.body)\n  }\n\n  get head() {\n    return document.head\n  }\n  set head(val) {\n    this.#setOrAppend(val, this.head)\n  }\n\n  get html() {\n    return document.documentElement\n  }\n  get title() {\n    return document.title\n  }\n  set title(val) {\n    document.title = val\n  }\n\n  get chubLocation(): string {\n    return chaosGl.chubLocation\n  }\n  set chubLocation(val) {\n    chaosGl.chubLocation = val\n  }\n\n  get chubDev(): boolean {\n    return chaosGl.chubDev\n  }\n  set chubDev(val) {\n    chaosGl.chubDev = val\n  }\n\n  #orStr(str: string, def = '') {\n    return str ? str : def\n  }\n\n  #prepSpcIf(str: string) {\n    return str ? str + ' ' : ''\n  }\n\n  s = CML_Static\n\n  styled = {} as Record<string, any>\n\n  #Rexps = () => this.s.Rexps\n  #initialFormat(str: string) {\n    let r = this.#Rexps\n    return str\n      .replace(r().lineWithComment, \"\")\n      .replace(r().formatspace2, \"\\n\")\n      .replace(r().formatspace1, \"\\n\")\n  }\n\n  #cascadeIndentList(str: string) {\n    let strLines = str.split(/;/);\n\n    let col = [] as CILEList\n\n    for (const line of strLines) col.push({\n      c: line.trim(),\n      i: line.search(/\\S/)\n    });\n\n    return col;\n  }\n\n  #sortCILIndent(contents: CILEList) {\n    const sortedContents = [];\n    let parentStack = [];\n\n    for (const content of contents) {\n      const currentIndent = content.i;\n      const currentContent = { c: content.c, i: currentIndent, children: [] };\n\n      while (parentStack.length > 0 && currentIndent <= parentStack[parentStack.length - 1].i)\n        parentStack.pop();\n\n      if (parentStack.length > 0) {\n        const parent = parentStack[parentStack.length - 1];\n        parent.children.push(currentContent);\n      } else {\n        sortedContents.push(currentContent);\n      }\n\n      parentStack.push(Object.assign(currentContent));\n    };\n\n    return sortedContents\n  }\n\n  #handleScript(scrmatch: string[] | null) {\n    const r = this.#Rexps;\n\n    let src = scrmatch![1]\n    let issrc = src.includes(\"src=\");\n    let execafter = src.includes(\"\\\"execafter\\\";\\n\");\n\n    var dostill = true;\n\n    const fetchScript = async (src: string) => {\n      let pt = await fetch(src)\n      let t = await pt.text()\n\n      // Append a script tag to the body\n      try {\n        let script = document.createElement(\"script\");\n        script.type = \"text/javascript\";\n        script.text = t;\n        document.body.appendChild(script);\n      }\n      catch (error) { console.log(error, this.s.errorList.scripterror); }\n    };\n\n    // Source Check\n    if (issrc && scrmatch) {\n      let srcis = src.match(/src=\"(.*)\"/);\n      if (srcis) {\n        fetchScript(srcis[1]);\n        dostill = false;\n      }\n    }\n\n    // Eval content (not SRC).\n    if (scrmatch !== null && dostill) {\n      try { chaosEval(src) }\n      catch (error) { console.error(error, this.s.errorList.scripterror) }\n    }\n  }\n\n  async #handleAtFetch(tempC: ChubNode, param: string) {\n    // param = param.slice(8); // @fetchw=\n\n    if (window?.location?.origin) {\n      param = `${param}`.includes(\"{{ORIG}}\")\n        ? param.replace(\"{{ORIG}}\", window.location.origin)\n        : param;\n    }\n\n    tempC.tag = tempC.tag\n      ? tempC.tag\n      : 'fetcherBlock';\n\n    tempC.data = (\n      `${this.#prepSpcIf(tempC.data)}data-fetchw=\"${param}\"`\n      + ` data-instance=\"${new Date().getTime()}\"`\n    );\n\n    let fw = await fetch(await this.findFile([param])) || {\n      text: () => { return param; },\n    };\n\n    let fwtext = await fw.text();\n    tempC.content = `${fwtext ? fwtext : \"\"}`;\n\n    // If window is loaded before script end, replace content.\n    if (window?.location?.origin) {\n      let el = this.$(`[${tempC.data.split(' ').join('][')}]`);\n      if (el)\n        el.innerHTML = tempC.content.replace(/\\n/g, '\\n</br>\\n');\n    }\n    return param;\n  }\n\n  // #watchVar(tempC: ChubNode, param: string) {\n  //   let v: unknown;\n  // }\n\n  // @@\n  #handleAtCode(tempC: ChubNode, param: any) {\n    if (typeof param !== \"string\") return;\n    /*\n      We need to:\n\n      Extract the @val from the param.\n      If as params, get params.\n\n      E.G.\n      tag @fetchw=https://www.google.com\n    */\n    console.log(\"using @: \", `${param}`.slice(1).split('='));\n\n    const S_name = param.slice(1)\n    const prune = (len: number) => S_name.slice(len + 1); // @...=, 2 extra\n    const starts = (str: string) => S_name.startsWith(str);\n\n    switch (true) {\n      case starts('fetchw'):\n        this.#handleAtFetch(tempC, prune(6));\n        break;\n      case starts('eval'):\n        this.#handleAtEval(tempC, prune(4));\n        break;\n\n      default: console.log(\"no @ found...?\", param);\n    }\n\n    return param;\n  }\n\n  #handleAtEval(tempC: ChubNode, ev: string) {\n    try { var scriptRes = chaosEval(ev) }\n    catch (error) { return console.error(error, this.s.errorList.scripterror) }\n    if (this.chubDev) console.log(\"scriptRes: \", scriptRes);\n    // Set text to res\n    let r = this.#orStr(scriptRes)\n    // tempC.data += ` data-eval=\"${r}\"`\n    tempC.content += r\n  }\n\n  #appendAttr(tempC: ChubNode, nodeName: keyof ChubNode, newAttr: string, expectedPrefixLen = 1) {\n    let pv = (newAttr as string).slice(expectedPrefixLen);\n    (tempC[nodeName] as any) = this.#prepSpcIf(tempC[nodeName].toString()) + pv;\n  }\n\n  #handleClass(tempC: ChubNode, param: any) {\n    this.#appendAttr(tempC, 'class', param);\n  }\n\n  #handleID(tempC: ChubNode, param: any) {\n    this.#appendAttr(tempC, 'id', param);\n  }\n\n  #handleData(tempC: ChubNode, param: any) {\n    this.#addAttribute(tempC, param, 'data', true);\n  }\n\n  #handlePercAttr(tempC: ChubNode, param: any) {\n    this.#addAttribute(tempC, param, 'attr', false);\n  }\n\n  #addAttribute(tempC: ChubNode, param: any, type: 'data' | 'attr', isData: boolean) {\n    let attrParam = this.attrSyn(param);\n    if (!attrParam) return;\n\n    let name = attrParam[0].slice(1)\n    let value = attrParam[1];\n\n    let attrB = `${name}=\"${value}\"`;\n    if (isData) attrB = `data-${attrB}`\n\n    tempC[type] = this.#prepSpcIf(tempC[type]) + attrB;\n  }\n\n  #handleChubAttr(param: any, tempC: ChubNode, paramI: number) {\n    switch (param[0]) {\n      case \"#\":\n        this.#handleID(tempC, param);\n        break;\n\n      case \".\":\n        this.#handleClass(tempC, param);\n        break;\n\n      case \"$\":\n        this.#handleData(tempC, param);\n        break;\n\n      case \"%\":\n        this.#handlePercAttr(tempC, param);\n        break;\n\n      case \"@\":\n        param = this.#handleAtCode(tempC, param);\n        break;\n\n      default: tempC.tag = this.#prepSpcIf(tempC.tag) + param;\n    }\n    return param;\n  }\n\n  #checkAttr = (tempC: ChubNode, arr: any[]) => arr.forEach((param, paramI) => {\n    param = this.#handleChubAttr(param, tempC, paramI);\n  })\n\n  #traverse(cil: SortedCILE, i: number, indexes: { str: any; tmp: number; }, v = ''): [SortedCILE, { str: number, tmp: number }] {\n    const r = this.#Rexps\n\n    let indentString = \"  \"\n\n    let str = cil.c\n    let isStr = str.search(r().betweenQuote)\n    let hasOpts = str.search(r().betweenCol)\n    let isscr = str.match(r().script)\n\n    let def = this.#makeDef()\n    let tempC = this.#makeDef()\n\n    // Script Operation\n    if (isscr !== null) {\n      this.#handleScript(r().script.exec(str));\n    }\n\n    // Text Operation\n    if (isStr !== -1) {\n      let tempLines = str.split(r().betweenCol)\n      let content = str.split(r().betweenQuote)[1]\n\n      if (hasOpts == null) {\n        tempC = def\n      } else {\n        var inner = tempLines[1] || \"\"\n        this.#checkAttr(tempC, inner.split(\" \"))\n      }\n\n      indexes.str++\n      tempC.content = content\n    } else {\n      this.#checkAttr(tempC, str.split(\" \"))\n    }\n\n    cil.o = tempC\n    cil.i = indentString.repeat(i)\n\n    if (cil.children) {\n      cil.children.forEach(child => this.#traverse(child, i + 1, indexes, v));\n    }\n\n    return [cil, indexes]\n  }\n\n  // @ Templates\n  #parseTemplates(cil: SortedCILE, opts = this.#makeIndexes()) {\n    const { o } = cil\n\n    let isTemplate = false\n\n    if (!o) throw new CowErr(`No CIL object found!`)\n    switch (o.tag) {\n\n    }\n\n    return { isTemplate }\n  }\n\n  #handleSHead(html: string, lessNl: any): string {\n    for (let stydm in this.styled) if (this.styled[stydm] === true && this.styled.styles[stydm]) {\n      let p = lessNl ? '' : '\\n'\n      html = html.replace(\"<head>\", \"<head>\" + p + this.styled.styles[stydm]);\n\n      // Set to \"has\" since we check earlier if the value is false to define it\n      // Also, might use later, need to exist, not be true.\n      this.styled[stydm] = \"has\";\n    }\n    return html;\n  }\n\n  #handleSpecialTag(html: string, lessNl: any): string {\n    if (html.includes(\"head\")) {\n      html = this.#handleSHead(html, lessNl);\n    }\n    return html;\n  }\n\n  #handleCNAttr(html: string, o: ChubNode) {\n    const is = (v: any) => !!v;\n    const addTo = (v: any) => html += v;\n\n    if (is(o.class))\n      addTo(` class=\"${o.class}\"`);\n\n    if (is(o.id))\n      addTo(` id=\"${o.id}\"`);\n\n    if (is(o.style))\n      addTo(` style=\"${o.style}\"`);\n\n    if (is(o.data))\n      addTo(` ${o.data}`);\n\n    if (is(o.attr))\n      addTo(` ${o.attr}`);\n    return html;\n  }\n\n  #buildHeadTag(html: string, cil: SortedCILE, o: ChubNode, isSpecial: number, shorter: boolean, lessNl: boolean) {\n    let p = lessNl ? \"\" : \"\\n\"\n    html = p + `${lessNl ? '' : cil.i}<${o.tag}`;\n\n    html = this.#handleCNAttr(html, o);\n\n    if (isSpecial > 0)\n      shorter = true;\n\n    let end = \">\" + p\n\n    if (shorter) html += \" /\"\n    html += end\n\n    return { html, shorter };\n  }\n\n  #handleBuildChild(child: SortedCILE, html: string, opts: { str: number; tmp: number; }, lessNl: boolean | undefined) {\n    let p = lessNl ? \"\" : child.i\n    switch (child.c[0]) {\n      case \"\\\"\":\n        html += p + child.c.slice(1, child.c.length - 1);\n        break;\n\n      default:\n        html += p + this.#parseChubNode(child, opts, lessNl);\n    }\n    return html;\n  }\n\n  #buildChildren(cil: SortedCILE, html: string, opts: { str: number; tmp: number; }, lessNl: boolean | undefined) {\n    for (const child of cil.children)\n      html = this.#handleBuildChild(child, html, opts, lessNl);\n    return html;\n  }\n\n  #buildFootTag(html: string, shorter: boolean, cil: SortedCILE, o: ChubNode, lessNl: boolean) {\n    let p = lessNl ? \"\" : \"\\n\"\n\n    html += p\n    if (!shorter) html += `${lessNl ? '' : cil.i}</${o.tag}>${p}`\n\n    // Â¯\\_(ãƒ„)_/Â¯ Quickest fix.\n    if (html.includes('<>')) html = html\n      .replace(\"<>\", \"\")\n      .replace(\"</>\", \"\")\n\n    return html;\n  }\n\n  #buildContent(cil: SortedCILE, html: string, lessNl: boolean) {\n    let p = lessNl ? \"\" : cil.i + '  '\n    if (cil.o?.content)\n      html += p + cil.o.content;\n    return html;\n  }\n\n  #parseChubNode(cil: SortedCILE, opts = this.#makeIndexes(), lessNl = false) {\n    const o = cil.o!\n    if (!o) throw new CowErr(`No CIL object found!`)\n\n    let shorter = false\n\n    let specialfind = this.arrMatch(o.tag, this.#specialTags)\n    let isSpecial = specialfind.count\n    let inList = specialfind.list\n\n    let html = ''\n\n    let { isTemplate } = this.#parseTemplates(cil, opts);\n\n    // This is enough for certain tags.\n    ({ html, shorter } = this.#buildHeadTag(html, cil, o, isSpecial, shorter, lessNl));\n\n    html = this.#buildContent(cil, html, lessNl);\n\n    html = this.#buildChildren(cil, html, opts, lessNl);\n\n    html = this.#buildFootTag(html, shorter, cil, o, lessNl);\n\n    html = this.#handleSpecialTag(html, lessNl);\n\n    return html\n  }\n\n  #constuctFrom(cil: SortedCILE, lessNl: boolean | undefined, v = '') {\n    let indexes = this.#makeIndexes()\n\n    let travRes = this.#traverse(cil, 0, indexes, v);\n\n    // @Crossover\n    { [cil, indexes] = travRes }\n\n    let res = this.#parseChubNode(cil, indexes, lessNl)\n\n    return res\n  }\n\n  parse(source: string, lessNl?: boolean | undefined) {\n    let str = this.#initialFormat(source)\n\n    let indList = this.#cascadeIndentList(str)\n\n    let sorted = this.#sortCILIndent(indList);\n\n    return this.#constuctFrom(sorted[0], lessNl);\n  }\n\n  async findFile(fileLocations: any) {\n    for (const location of fileLocations) {\n      try {\n        const response = await fetch(location);\n\n        // Check if the response was successful (status code in the range of 200-299)\n        if (response.ok) {\n          return location; // Return the valid file location\n        }\n      } catch (error) {\n        // Handle any errors that occur during the fetch request\n        console.error(`Error fetching file from '${location}':`, error);\n      }\n    }\n\n    // Return null if no valid file location was found\n    return null;\n  }\n\n  ChubRep(doc: string, quirky = \"<!DOCTYPE html>\") {\n    (doc as any) = this.parse(doc, true);\n    document.open();\n    document.write(quirky + '\\n' + doc);\n    document.close();\n  }\n\n  injectChub(input: string) {\n    // var input = `\n    // div;\n    //   \"wow, im super simple. <br>\n    //   and supper COOOL!\";\n    //   hr #wow $hey=lol .very .omg .neat %omg=js|is|cool;\n    //   :Super .cool: \"WOOO!\";\n    //     span .woah;\n    //       \"wow!\";\n    // `;\n\n    var htmlCode = this.parse(input, true);\n\n    if (this.chubDev == true) console.log(htmlCode)\n\n    let locationB = this.chubLocation || \"chub\"\n    let locationGot = this.$(locationB)\n    if (!locationGot) locationB = \"body\"\n    else locationGot.innerHTML = htmlCode;\n\n    // On finish, run finish.\n    // chaosGl.chubinjected?.(locationGot);\n    ChubMLMod.#ChubInjected.detail = locationGot;\n    ChubMLMod.#ChubInjected.activate();\n  }\n\n  Router = class Router {\n    __env__ = checkEnvironment();\n\n    constructor() {\n      switch (this.__env__) {\n        case \"Node\":\n          break;\n        case \"Browser\":\n          break;\n      }\n    }\n\n  }\n\n  // Reformat Attributes to prevent conflicts and such.\n  CHUBfax(tex: string, sep = \" \") {\n    let modtxt = tex || \"\";\n    modtxt = modtxt\n      .replaceAll(\"=\", \"|e\")\n      .replaceAll(\";\", \"|col\")\n      .replaceAll(\"\\\"\", \"|qw\")\n      .replaceAll(sep, \"|\")\n\n    return modtxt\n  }\n\n  attrSyn(tex: string) {\n    if (`${tex}`.match(/=/gm)!?.length > 1) throw this.s.errorList.eqspl3\n\n    let attrParam = tex\n      // Tokenize\n      .replace(\"=\", \" spcfork.Equals.Token \")\n      .replace(\"\\\\|\", \" spcfork.Pipe.Token \")\n\n      .replace(/\\|e/gm, \"=\")\n      .replace(/\\|col/gm, \";\")\n      .replace(/\\|qw/gm, \"\\\"\")\n      .replace(/\\|/gm, \" \")\n\n      .replace(\" spcfork.Pipe.Token \", \"|\")\n\n      // Split at Token to prevent multiple splits.\n      .split(\" spcfork.Equals.Token \")\n\n    // console.log(attrParam.length, attrParam)\n    return attrParam\n  }\n\n  /**\n   * Fetch a web page and convert it to CHUB\n   * @param {string} url The URL of the web page to fetch\n   * @returns The CHUB representation of the web page\n   */\n  async CHUBWFetch(url: string | URL | Request): Promise<string> {\n    const response = await fetch(url);\n    if (!response?.ok)\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    const html = await response.text();\n    return this.HTMLToChub(html);\n  }\n\n  getURLbit() {\n    var url = window.location.href;\n    var parts = url.split('/');\n    var lastPart = parts[parts.length - 1];\n\n    return lastPart;\n  }\n\n  CHUBsanitize(input: string) {\n    var element = document.createElement('div');\n    element.innerText = input;\n    var sanitizedInput = element.innerHTML;\n    return sanitizedInput;\n  }\n\n  DupeCollection = {} as Record<string, any>\n  /**\n   * @param {string} dupe - The dupe to be added to the collection.\n   * @returns {object} - The edited dupe, the dupe collection, and the stringified and parsed collection.\n   */\n  CHUBduper(dupe: string = \"p;\"): object {\n    if (!this.DupeCollection) {\n      this.DupeCollection = {};\n    }\n\n    if (this.DupeCollection[dupe] !== undefined) {\n      this.DupeCollection[dupe] += 1;\n    } else {\n      this.DupeCollection[dupe] = 0;\n    }\n\n    let editedDupe;\n    if (dupe.includes(\";\")) {\n      let d = dupe.split(\";\");\n      d[0] += ` #${this.DupeCollection[dupe]}`;\n      editedDupe = d.join(\"\");\n    } else {\n      editedDupe = dupe + \";\";\n    }\n\n    let d = {\n      editedDupe,\n      D: this.DupeCollection,\n      s: (() => JSON.stringify(this.DupeCollection)),\n      c: (() => JSON.parse(d.s())),\n    };\n\n    return d\n  }\n\n  CHUBstrprep(str: string) {\n    return str\n      .replace(/[.*+?^${}()|[\\]\\\\\"';:]/g, '\\\\$&')\n      .replace(/[;]/g, '|col')\n  }\n\n  CHUBunmess(str: string) {\n    const escapedStr = str.replace(/\\\\\\\"/g, '\"');\n    const unescapedStr = escapedStr.replace(/\\\\\\|col/g, ',');\n\n    return [\n      unescapedStr,\n      JSON.parse(unescapedStr),\n    ]\n  }\n\n  MLTextToNodes(str: string, type: DOMParserSupportedType = 'text/html') {\n    return new DOMParser().parseFromString(str, type);\n  }\n\n  Chubify(str: string) {\n    let parsedHTML = this.parse(str, true)\n    let parsedDOM = this.MLTextToNodes(parsedHTML, 'text/html')\n    return parsedDOM\n  }\n\n  // ARARARAR\n  HTMLToChub = (html: string | Element, delim = \"\") => {\n    if (html instanceof Element) html = html.outerHTML;\n\n    const doc = this.MLTextToNodes(html, 'text/html');\n    return this.getChubML(doc.documentElement, '', delim)\n  }\n\n  getChubML = (node: Element, indent = '', delim = '') => {\n    let chubML = '';\n\n    // Process node name\n    chubML += `${indent}${node.nodeName.toLowerCase()}`;\n\n    // Process attributes\n\n    if (node.attributes.length > 0) {\n      const attrs = Array.from(node.attributes);\n      chubML = this.#handleAttr(attrs, chubML);\n    }\n\n    // Process child nodes\n    if (node.childNodes.length > 0)\n      chubML = this.#handleChildren(chubML, node, indent, delim);\n    else\n      chubML += ';\\n';\n\n    return chubML;\n  }\n\n  #handleChildTextNode(child: Element, indent: string) {\n    if (!child.textContent) return '';\n    let t = child.textContent.trim();\n    if (t != \"\") return `${indent}  \"${t}\";\\n`;\n    return '';\n  }\n\n  #handleChildren(chubML: string, node: Element, indent: string, delim: string) {\n    chubML += ';\\n';\n    const childNodes = Array.from(node.childNodes);\n    for (const child of childNodes) switch (child.nodeType) {\n      case Node.TEXT_NODE:\n        chubML += this.#handleChildTextNode(child as Element, indent);\n        break;\n      case Node.ELEMENT_NODE:\n        chubML += this.getChubML(child as Element, indent + '  ', delim);\n        break;\n    }\n    chubML += `${indent}${delim}\\n`;\n    return chubML;\n  }\n\n  #handleAttr(attrs: Attr[], chubML: string) {\n    const cfv = (attr: Attr) => this.CHUBfax(attr.value)\n    for (const attr of attrs) switch (attr.name.toLowerCase()) {\n      case 'class':\n        chubML += ` .${cfv(attr)}`;\n        break;\n      case 'id':\n        chubML += ` #${cfv(attr)}`;\n\n      default: chubML += ` %${attr.name}=${cfv(attr)}`;\n    }\n    return chubML;\n  }\n\n  aliasIndexes = [\n    \"beam.lmc\",\n    \"beam.chub\",\n\n    \"index.lmc\",\n    \"index.chub\",\n  ]\n\n  async #checkFile(loc: string | URL | Request, opts = {}) {\n    let req = await fetch(loc, { method: \"HEAD\", ...opts })\n    return [req.ok, req] as [boolean, Response]\n  }\n\n  async #getFileSafely(loc: string | URL | Request) {\n    let [ok, okRes] = await this.#checkFile(loc)\n    if (!ok) throw new Error(`File not found!`)\n    let req = await fetch(loc)\n    return { req, okRes }\n  }\n\n  async #findFileOfCases(fileLocations: string[]) {\n    for (const loc of fileLocations) {\n      let [ok, okRes] = await this.#checkFile(loc)\n      if (ok) return loc\n    }\n    return null\n  }\n\n  #batchFile = (\n    handleFile: Function,\n    loc: string\n  ): Promise<[string, boolean]> => new Promise(async (resolve, reject) => {\n    try {\n      await handleFile(loc, resolve);\n    } catch (error) {\n      reject(error);\n    }\n  });\n\n  async #batchFileOfCases(fileLocations: string[]) {\n    let pArr = [] as Promise<[string, boolean]>[];\n    let abortController = new AbortController();\n\n    const handleFile = async (loc: string, resolve: Function) => {\n      if (abortController.signal.aborted) throw new Error(\"Aborted\");\n      let [f] = await this.#checkFile(loc, { signal: abortController.signal });\n      if (f) abortController.abort();\n      resolve([loc, f]);\n    }\n\n    for (const loc of fileLocations)\n      pArr.push(this.#batchFile(handleFile, loc));\n\n    let resses = await Promise.all(\n      pArr.map(p => p.catch(e => ['', false] as ['', boolean]))\n    );\n\n    // Find first valid res\n    for (const [res, ok] of resses)\n      if (ok) return res;\n\n    return null;\n  }\n\n  async #fileOrFallback(loc: string | URL | Request, slowly = false) {\n    let [ok, okRes] = await this.#checkFile(loc)\n    if (ok) return loc\n    return slowly\n      ? await this.#findFileOfCases(this.aliasIndexes)\n      : await this.#batchFileOfCases(this.aliasIndexes)\n  }\n\n  async beamPrep(location: string | URL | Request, slowly: boolean) {\n    let fileName = await this.#fileOrFallback(location, slowly);\n    if (!fileName)\n      throw new Error(`File not found!`);\n    let req = await this.#getFileSafely(fileName);\n    chaosGl.lastChub = req;\n    return { ...req, location };\n  }\n\n  async beamParse(req: Response, location: any = '') {\n    let text = await req.text();\n    let doc = this.parse(text, true);\n    return { text, doc, location }\n  }\n\n  async beamMake(location: string | URL | Request, slowly: boolean) {\n    let { req } = await this.beamPrep(location, slowly);\n    return await this.beamParse(req, location);\n  }\n\n  async beamDo(req: Response, DOM: any) {\n    let { text, doc, location } = await this.beamParse(req);\n    this.beamRender(doc, DOM, { location, text });\n  }\n\n  beamRender(doc: string, DOM: any, optionalDetails = {}) {\n    if (this.chubDev) console.log(doc);\n\n    let entrypoint = DOM || this.chubLocation || 'chub';\n    let locationGot = this.$(entrypoint) || document.body\n\n    locationGot.innerHTML = doc;\n\n    // On finish, run finish.\n    // chaosGl.chubinjected?.(locationGot);\n    ChubMLMod.#ChubInjected.detail = {\n      nodes: locationGot,\n      text: doc,\n      ...optionalDetails\n    };\n    ChubMLMod.#ChubInjected.activate();\n  }\n\n  async beamSync(location: string | URL | Request, DOM: any, slowly = false) {\n    // Creates a factory which does prep, then returns a function which does the actual work.\n    let { req } = await this.beamPrep(location, slowly);\n    return async () => await this.beamDo(req, DOM);\n  }\n\n  /**\n   * Example usage:\n   * \n   * ```typescript\n   * const cml = new ChubMLMod();\n   * cml.beamChub('/path/to/chub/file', document.getElementById('app'), true);\n   * ```\n   * \n   * @param slowly - If true, errors are ignored and execution using a quicker Promise.all, this is better for users, worse for servers.\n   */\n  async beamChub(location: string | URL | Request, DOM: any, slowly = false) {\n    return await (await this.beamSync(location, DOM, slowly))();\n  }\n\n  constructor() {\n    super()\n\n    try { this.#elevateToWindow() } catch { }\n  }\n\n  #elevateToWindow() {\n\n  }\n}\n\nconst chubml = new ChubMLMod;\n\n// @ Exporter\ntry { module.exports = chubml } catch { }\ntry { chaosGl.window.ChubML = chubml } catch { }"],"mappings":"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","names":["src","d"]}