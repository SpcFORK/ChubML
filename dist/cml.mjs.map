{"version":3,"sources":["../src/cml.ts"],"sourcesContent":["// @ CowSTD\nimport cst from './cst';\nconst { chaosGl, chaosEval, NOOP, ANOOP } = cst;\n\nimport CowErr from './CowErr';\n\n// Global\nimport type * as gl from '../global';\n\n// @ CML\nimport type { CILEList, ChubNode, SortedCILE } from './CILEList';\n\nimport CML_Static from './static';\nimport CustomEventHandle from './CustomEventHandle';\nimport checkEnvironment from './checkEnvironment';\nimport eobj from './eobj';\n\n/**\n * A ChubML instance.\n * \n * =-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-\n *\n * 2024\n * SpcFORK - ChubML\n * Copyright (c) SpcFORK\n * \n * =-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-\n *\n * ```go\n *       ,\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\",^,\"\"\"\"\"\"\"\"\"\"\"\",\n *     .l ?]]]]]]]]]]]]]]]].~.????????????.I\n *     \",!l]IIIIIIIIIIIIIIII,< ]]]]]]]]]]]] l\n *     l ]]]lllllllllllllIII:> ]]]]]]]]]]]] l\n *     l:iii>>>>>>>>>>>>>]]] ~ ]]]]]]]]]]]] l\n *     l`++++++++++++++++---.~ ]]]]]]]]]]]] l\n *     lIIIIIIIIIIIIIIIIIIII;~.??????----?? l\n *     lIlllllllllllllllllll:iI\"\"\"\"\"\",;:;''l;\".\n *     l;lllllllllllllllllll:l    '^,,Iii??]-i;\".\n *     `I,I:::::::::I,,,,,,,:`   ,;ii??]]]]]]]-i\",\n *      ,:iiiiiiiii:,          :IIii!!!!!!!?]]]I:\"\n *      l ]]]]]]]]] l           ^`````````l.]]]] i\n *      l ]]]]]]]]] l                   .`l.]]]]?.I\n *      l.?]]]]]]]] l         ,\"\"\"\"\"\"\"\"\";!!?]]]]] l\n *      `i ]]]]]]]] l        I.?????????-]]]]]]]I\";\n *       ;:I]]]]]]]l;\"\"\"\"\"\"\",! ]]]]]]]]]]]]]]]?!^;\n *        I,i-]]]]]]-???????.~ ]]]]]]]]]]]]]?!,,^\n *         ^IIi?-]]]]]]]]]]] ~ ]]]]]]]]]]??!,,^\n *           ^I\"I!!!!!!!!!!!\">:!!!!!!!!!!,\",^\n *              ^```````````^ ^``````````^\n * ```\n * \n * =-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-\n * \n * TODO:\n * - Make code cleaner/compact.\n * - Make ECSS.\n\n * - Implement CowStack !!\n\n * - Create CHUBECSS Parser.\n * \n * =-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-\n * \n * TOUR:\n *   *Q-Sel:\n *   $()\n *   *Array matcher\n *       arrMatch\n *   *Parser:\n *     parse()\n *       -> sortInd()\n *       -> stringi()\n *\n * =-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=--=-=-=-=-\n*/\nclass ChubMLMod extends CML_Static {\n  static ChubML = ChubMLMod\n  ChubML = ChubMLMod\n\n  static #ChubStarted = new CustomEventHandle('chubstart');\n  static #ChubInjected = new CustomEventHandle('chubinjected');\n\n  // @ Options\n  static {\n    chaosGl.lastChub ||= \"\"\n    chaosGl.cbMode ||= \"\"\n    chaosGl.chubLocation ||= \"\"\n    chaosGl.chubDev ||= false\n\n    chaosGl.__lastQD = null\n    chaosGl.__lastQM = null\n\n    chaosGl.onload && (window.onload = () => {\n      this.#ChubStarted.detail = this\n      this.#ChubStarted.activate();\n    })\n  }\n\n  #makeDef = (_?: SortedCILE): ChubNode => ({\n    tag: \"\",\n    id: \"\",\n    class: \"\",\n    content: \"\",\n    data: \"\",\n    style: \"\",\n    attr: \"\",\n    indent: 0,\n    [Symbol.unscopables]: {\n      _: _ || null,\n      atBucket: []\n    }\n  })\n\n  static #_(scope: { [key: string]: any, [Symbol.unscopables]: any }): Record<string, any> {\n    return Reflect.get(scope, Symbol.unscopables)\n  }\n  #un = ChubMLMod.#_\n\n  static #_b(scope: { [key: string]: any, [Symbol.unscopables]: any }): string[] {\n    return this.#_(scope).atBucket\n  }\n  #ab = ChubMLMod.#_b\n\n  #makeIndexes = () => ({\n    str: 0,\n    tmp: 0,\n  })\n\n  #specialTags = [\n    'area',\n    'base',\n    'br',\n    'col',\n    'embed',\n    'hr',\n    'img',\n    'input',\n    'link',\n    'meta',\n    'param',\n    'source',\n    'track',\n    'wbr'\n  ]\n\n  static #getQM() {\n    return chaosGl.__lastQM\n  }\n  static get __lastQM() {\n    return this.#getQM()\n  }\n\n  static #setQM(val: string) {\n    chaosGl.__lastQM = val\n  }\n  static set __lastQM(val) {\n    this.#setQM(val)\n  }\n\n  get __lastQM() {\n    return ChubMLMod.__lastQM\n  }\n  set __lastQM(val) {\n    ChubMLMod.__lastQM = val\n  }\n\n  static #getQD() {\n    return chaosGl.__lastQD\n  }\n  static get __lastQD() {\n    return this.#getQD()\n  }\n\n  static #setQD(val: string) {\n    chaosGl.__lastQD = val\n  }\n  static set __lastQD(val) {\n    this.#setQD(val)\n  }\n\n  get __lastQD() {\n    return ChubMLMod.__lastQD\n  }\n  set __lastQD(val) {\n    ChubMLMod.__lastQD = val\n  }\n\n  get doc() {\n    return document\n  }\n\n  #setOrAppend(val: string | Element, p: Element) {\n    if (typeof val === 'string') this.body.innerHTML = val\n    else this.body.appendChild(val)\n  }\n\n  get body() {\n    return document.body\n  }\n  set body(val) {\n    this.#setOrAppend(val, this.body)\n  }\n\n  get head() {\n    return document.head\n  }\n  set head(val) {\n    this.#setOrAppend(val, this.head)\n  }\n\n  get html() {\n    return document.documentElement\n  }\n  get title() {\n    return document.title\n  }\n  set title(val) {\n    document.title = val\n  }\n\n  get chubLocation(): string {\n    return chaosGl.chubLocation\n  }\n  set chubLocation(val) {\n    chaosGl.chubLocation = val\n  }\n\n  get chubDev(): boolean {\n    return chaosGl.chubDev\n  }\n  set chubDev(val) {\n    chaosGl.chubDev = val\n  }\n\n  #orStr(str: string, def = '') {\n    return str ? str : def\n  }\n\n  #prepSpcIf(str: string) {\n    return str ? str + ' ' : ''\n  }\n\n  s = CML_Static\n\n  styled = {} as Record<string, any>\n\n  #Rexps = () => this.s.Rexps\n  #initialFormat(str: string) {\n    let r = this.#Rexps\n    return str\n      .replace(r().lineWithComment, \"\")\n      .replace(r().formatspace2, \"\\n\")\n      .replace(r().formatspace1, \"\\n\")\n  }\n\n  #cascadeIndentList(str: string) {\n    let strLines = str.split(/;/);\n\n    let col = [] as CILEList\n\n    for (const line of strLines) col.push({\n      c: line.trim(),\n      i: line.search(/\\S/)\n    });\n\n    return col;\n  }\n\n  #sortCILIndent(contents: CILEList) {\n    const sortedContents = [];\n    let parentStack = [];\n\n    for (const content of contents) {\n      const currentIndent = content.i;\n      const currentContent = { c: content.c, i: currentIndent, children: [], parent: null };\n\n      while (parentStack.length > 0 && currentIndent <= parentStack[parentStack.length - 1].i)\n        parentStack.pop();\n\n      if (parentStack.length > 0) {\n        const parent = parentStack[parentStack.length - 1];\n        currentContent.parent = parent;\n        parent.children.push(currentContent);\n      } else {\n        sortedContents.push(currentContent);\n      }\n\n      parentStack.push(Object.assign(currentContent));\n    };\n\n    return sortedContents\n  }\n\n  #handleScript(scrmatch: string[] | null) {\n    const r = this.#Rexps;\n\n    let src = scrmatch![1]\n    let issrc = src.includes(\"src=\");\n    let execafter = src.includes(\"\\\"execafter\\\";\\n\");\n\n    var dostill = true;\n\n    const fetchScript = async (src: string) => {\n      let pt = await fetch(src)\n      let t = await pt.text()\n\n      // Append a script tag to the body\n      try {\n        let script = document.createElement(\"script\");\n        script.type = \"text/javascript\";\n        script.text = t;\n        document.body.appendChild(script);\n      }\n      catch (error) { console.log(error, this.s.errorList.scripterror); }\n    };\n\n    // Source Check\n    if (issrc && scrmatch) {\n      let srcis = src.match(/src=\"(.*)\"/);\n      if (srcis) {\n        fetchScript(srcis[1]);\n        dostill = false;\n      }\n    }\n\n    // Eval content (not SRC).\n    if (scrmatch !== null && dostill) {\n      try { chaosEval(src) }\n      catch (error) { console.error(error, this.s.errorList.scripterror) }\n    }\n  }\n\n  #parseParam(param: string) {\n    let p = this.attrSyn(param).join('');\n    let r = this.#orStr(p);\n    return r;\n  }\n\n  async #handleAtFetch(tempC: ChubNode, param: string) {\n    // param = param.slice(8); // @fetchw=\n\n    window?.location?.origin && (\n      param = `${param}`.includes(\"{{ORIG}}\")\n        ? param.replace(\"{{ORIG}}\", window.location.origin)\n        : param\n    );\n\n    tempC.tag = tempC.tag\n      ? tempC.tag\n      : 'fetcherBlock';\n\n    tempC.data = (\n      `${this.#prepSpcIf(tempC.data)}data-fetchw=\"${param}\"`\n      + ` data-instance=\"${new Date().getTime()}\"`\n    );\n\n    let fw = await fetch(await this.findFile([param])) || {\n      text: () => { return param; },\n    };\n\n    let fwtext = await fw.text();\n    tempC.content = `${fwtext ? fwtext : \"\"}`;\n\n    // If window is loaded before script end, replace content.\n    if (window?.location?.origin) {\n      let el = this.$(`[${tempC.data.split(' ').join('][')}]`);\n      el && (\n        el.innerHTML = tempC.content.replace(/\\n/g, '\\n</br>\\n')\n      )\n    }\n    return param;\n  }\n\n  #stealProp<T>(tempC: T, prop: keyof T) {\n    let v = tempC[prop];\n    (tempC[prop] as any) = '';\n    return v\n  }\n\n  #defEval(er: string | number | { _: SortedCILE | null; atBucket: string[]; }): any {\n    return er ? chaosEval(er) : {};\n  }\n\n  #stealAndTryToEval(tempC: ChubNode, prop: keyof ChubNode) {\n    if (!tempC[prop]) return {};\n    try { var r = this.#defEval(this.#stealProp(tempC, prop)) } catch { }\n    return r!\n  }\n\n  #handleAtEval(tempC: ChubNode, ev: string) {\n    let r = this.attrSyn(ev).join(';');\n    let er = this.#stealAndTryToEval(tempC, 'id')\n\n    try { var scriptRes = new Function(r).bind(tempC)(er, tempC) }\n    catch (error) { return console.error(error, this.s.errorList.scripterror) }\n\n    this.chubDev && console.log(\"AtEval: \", scriptRes);\n    scriptRes && this.#handleAtPutCont(tempC, scriptRes);\n  }\n\n  #handleAtRet(tempC: ChubNode, ev: string) {\n    this.#handleAtEval(tempC, 'return ' + ev);\n    this.chubDev && console.log(\"AtRet: \", ev);\n  }\n\n  #handleAtPutCont(tempC: ChubNode, param: string) {\n    let r = this.#parseParam(param)\n    tempC.content += r\n    this.chubDev && console.log(\"AtPutCont: \", param);\n  }\n\n  #handleAtCall(tempC: ChubNode, globalRef: string) {\n    let r = this.#parseParam(globalRef)\n    let res = chaosEval(r)\n\n    if (!res) throw new CowErr(\"CowErr\", \"No Call: \" + r)\n    if (typeof res !== 'function') throw new CowErr(\"CowErr\", \"Not a function: \" + r)\n\n    let er = this.#stealAndTryToEval(tempC, 'id')\n    let cr = res.bind(tempC)(tempC, er)\n    cr && this.#handleAtPutCont(tempC, cr)\n\n    this.chubDev && console.log(\"Call: \", cr);\n  }\n\n  #handleAtFrom(tempC: ChubNode, param: string) {\n    let r = this.#parseParam(param)\n    let template = this.$(r)\n    if (!template) throw new CowErr(\"CowErr\", \"No Template: \" + r)\n    let res = template.innerHTML\n    tempC.content += res\n    this.chubDev && console.log(\"AtFrom: \", res)\n  }\n\n  #handleAtImport(tempC: ChubNode, pv: string) {\n    let res = this.beamMake(pv, true);\n    res.then(({ doc }) => tempC.content += this.parse(doc))\n  }\n\n  #handleAtGlobalize(tempC: ChubNode, param: string) {\n    let r = this.#parseParam(param)\n    Object.defineProperty(chaosGl, r, {\n      get: () => tempC\n    })\n    this.chubDev && console.log(\"AtGlobalize: \", param);\n  }\n\n  #definePropertyWithHelper(target: any, property: string, value: any, helper: any) {\n    target[property] = value;\n    Reflect.defineProperty(chaosGl, helper, {\n      get: () => target[property],\n      configurable: true,\n      enumerable: true\n    });\n  }\n\n  #dfi(res: any, fp: string, v: any) {\n    this.#definePropertyWithHelper(res, fp, v, '__lastQD');\n  }\n\n  #dfp(res: any, fp: string, v: any) {\n    this.#definePropertyWithHelper(res, fp, v, '__lastQM');\n  }\n\n  #handleAtMkPrp(tempC: ChubNode, p: string) {\n    let [gobj, ...propNames] = p.split('.');\n    let fp = propNames.pop();\n    let g = chaosGl[gobj];\n\n    if (!fp)\n      throw new CowErr(\"CowErr\", \"No property name: \" + p);\n    if (!g)\n      throw new CowErr(\"CowErr\", \"No Global Object: \" + gobj);\n\n    let res = g;\n    for (const propName of propNames) {\n      res = res[propName];\n      if (!res)\n        throw new CowErr(\"CowErr\", \"No Property: \" + propName);\n    }\n\n    // var er = this.#stealProp(tempC, 'id');\n    this.#dfp(res, fp, this.#stealAndTryToEval(tempC, 'id'));\n\n    this.chubDev && console.log(\"MkPrp: \", p, fp, g, res, res[fp]);\n  }\n\n  #handleAtDef(tempC: ChubNode, param: string) {\n    let er = this.#stealProp(tempC, 'id');\n    this.#dfi(chaosGl, param, this.#defEval(er!));\n\n    this.chubDev && console.log(\"AtDef: \", param);\n  }\n\n  #handleAtAsg(tempC: ChubNode, param: string) {\n    let propName = this.attrSyn(param)\n    let er = this.#stealProp(tempC, 'id') as string\n    let res = propName.join(';')\n\n    if (er) {\n      Reflect.set(chaosGl, er, res)\n      tempC.content += er\n    } else new CowErr('CowErr', 'No Property: ' + res).throw()\n\n    this.chubDev && console.log(\"AtAsg: \", tempC, res, er);\n  }\n\n  // #watchVar(tempC: ChubNode, param: string) {\n  //   let v: unknown;\n  // }\n\n  /** @@ - At Codes */\n  #handleAtCode(tempC: ChubNode, param: any) {\n    if (typeof param !== \"string\") return;\n    /*\n      We need to:\n\n      Extract the @val from the param.\n      If as params, get params.\n\n      E.G.\n      tag @fetchw=https://www.google.com\n    */\n    if (this.chubDev)\n      console.log(\"using @: \", `${param}`.slice(1).split(/[=]/));\n\n    const S_name = param.slice(1)\n    function prune(len: number): string {\n      let p = S_name.slice(len + 1);\n      ChubMLMod.#_b(tempC).push(p);\n      return p\n    }\n    function starts(str: string): boolean {\n      return S_name.startsWith(str);\n    }\n\n    switch (true) {\n\n      // @@ Std 1\n\n      case starts('fetchw'):\n        this.#handleAtFetch(tempC, prune(6));\n        break;\n\n      case starts('eval'):\n        this.#handleAtEval(tempC, prune(4));\n        break;\n\n      case starts('ret'):\n        this.#handleAtRet(tempC, prune(3));\n        break;\n\n      case starts(':'):\n        this.#handleAtPutCont(tempC, prune(0));\n        break;\n\n      case starts('call'):\n        this.#handleAtCall(tempC, prune(4));\n        break;\n\n      case starts('from'):\n        this.#handleAtFrom(tempC, prune(4));\n        break;\n\n      case starts('import'):\n        this.#handleAtImport(tempC, prune(6));\n        break;\n\n      case starts('gl'):\n        this.#handleAtGlobalize(tempC, prune(2));\n        break;\n\n      case starts('mkprp'):\n        this.#handleAtMkPrp(tempC, prune(5));\n        break;\n\n      case starts('def'):\n        this.#handleAtDef(tempC, prune(3));\n        break;\n\n      case starts('asg'):\n        this.#handleAtAsg(tempC, prune(3));\n        break;\n\n      case starts('%'):\n        this.#handleAtCode(tempC, prune(1));\n        break;\n\n      // ---\n\n      default: console.log(\"no valid @ found...?\", param);\n    }\n\n    return param;\n  }\n\n  #appendAttr(tempC: ChubNode, nodeName: keyof ChubNode, newAttr: string, expectedPrefixLen = 1) {\n    let pv = (newAttr as string).slice(expectedPrefixLen);\n    (tempC[nodeName] as any) = this.#prepSpcIf(tempC[nodeName].toString()) + pv;\n  }\n\n  #handleClass(tempC: ChubNode, param: any) {\n    this.#appendAttr(tempC, 'class', param);\n  }\n\n  #handleID(tempC: ChubNode, param: any) {\n    this.#appendAttr(tempC, 'id', param);\n  }\n\n  #handleData(tempC: ChubNode, param: any) {\n    this.#addAttribute(tempC, param, 'data', true);\n  }\n\n  #handlePercAttr(tempC: ChubNode, param: any) {\n    this.#addAttribute(tempC, param, 'attr', false);\n  }\n\n  #addAttribute(tempC: ChubNode, param: any, type: 'data' | 'attr', isData: boolean) {\n    let attrParam = this.attrSyn(param);\n    if (!attrParam) return;\n\n    let name = attrParam[0].slice(1)\n    let value = attrParam[1];\n\n    let attrB = `${name}=\"${value}\"`;\n    isData && (attrB = `data-${attrB}`)\n\n    tempC[type] = this.#prepSpcIf(tempC[type]) + attrB;\n  }\n\n  #handleChubAttr(param: any, tempC: ChubNode, paramI: number) {\n    switch (param[0]) {\n      case \"#\":\n        this.#handleID(tempC, param);\n        break;\n\n      case \".\":\n        this.#handleClass(tempC, param);\n        break;\n\n      case \"$\":\n        this.#handleData(tempC, param);\n        break;\n\n      case \"%\":\n        this.#handlePercAttr(tempC, param);\n        break;\n\n      case \"@\":\n        param = this.#handleAtCode(tempC, param);\n        break;\n\n      default: tempC.tag = this.#prepSpcIf(tempC.tag) + param;\n    }\n    return param;\n  }\n\n  #checkAttr = (tempC: ChubNode, arr: any[]) => arr.forEach((param, paramI) => {\n    param = this.#handleChubAttr(param, tempC, paramI);\n  })\n\n  #traverse(cil: SortedCILE, i: number, indexes: { str: any; tmp: number; }, v = ''): [SortedCILE, { str: number, tmp: number }] {\n    const r = this.#Rexps\n\n    let indentString = \"  \"\n\n    let str = cil.c\n    let isStr = str.search(r().betweenQuote)\n    let hasOpts = str.search(r().betweenCol)\n    let isscr = str.match(r().script)\n\n    let def = this.#makeDef(cil)\n    let tempC = this.#makeDef(cil)\n\n    // Script Operation\n    isscr !== null &&\n      this.#handleScript(r().script.exec(str));\n\n    // Text Operation\n    if (isStr !== -1) {\n      let tempLines = str.split(r().betweenCol)\n      let content = str.split(r().betweenQuote)[1]\n\n      if (hasOpts == null) {\n        tempC = def\n      } else {\n        var inner = tempLines[1] || \"\"\n        this.#checkAttr(tempC, inner.split(\" \"))\n      }\n\n      indexes.str++\n      tempC.content = content\n    } else {\n      this.#checkAttr(tempC, str.split(\" \"))\n    }\n\n    cil.o = tempC\n    cil.i = indentString.repeat(i)\n\n    cil.children &&\n      cil.children.forEach(child => this.#traverse(child, i + 1, indexes, v));\n\n    return [cil, indexes]\n  }\n\n  // @ Templates\n  #parseTemplates(cil: SortedCILE, opts = this.#makeIndexes()) {\n    const { o } = cil\n\n    let isTemplate = false\n\n    if (!o) throw new CowErr(`No CIL object found!`)\n    switch (o.tag) {\n\n    }\n\n    return { isTemplate }\n  }\n\n  #handleSHead(html: string, lessNl: any): string {\n    for (let stydm in this.styled) if (this.styled[stydm] === true && this.styled.styles[stydm]) {\n      let p = lessNl ? '' : '\\n'\n      html = html.replace(\"<head>\", \"<head>\" + p + this.styled.styles[stydm]);\n\n      // Set to \"has\" since we check earlier if the value is false to define it\n      // Also, might use later, need to exist, not be true.\n      this.styled[stydm] = \"has\";\n    }\n    return html;\n  }\n\n  #handleSpecialTag(html: string, lessNl: any): string {\n    html.includes(\"head\") &&\n      (html = this.#handleSHead(html, lessNl))\n    return html;\n  }\n\n  #handleCNAttr(html: string, o: ChubNode) {\n    const is = (v: any) => !!v;\n    const addTo = (v: any) => html += v;\n\n    if (is(o.class))\n      addTo(` class=\"${o.class}\"`);\n\n    if (is(o.id))\n      addTo(` id=\"${o.id}\"`);\n\n    if (is(o.style))\n      addTo(` style=\"${o.style}\"`);\n\n    if (is(o.data))\n      addTo(` ${o.data}`);\n\n    if (is(o.attr))\n      addTo(` ${o.attr}`);\n    return html;\n  }\n\n  #buildHeadTag(html: string, cil: SortedCILE, o: ChubNode, isSpecial: number, shorter: boolean, lessNl: boolean) {\n    let p = lessNl ? \"\" : \"\\n\"\n    html = p + `${lessNl ? '' : cil.i}<${o.tag}`;\n\n    html = this.#handleCNAttr(html, o);\n\n    if (isSpecial > 0)\n      shorter = true;\n\n    let end = \">\" + p\n\n    if (shorter) html += \" /\"\n    html += end\n\n    return { html, shorter };\n  }\n\n  #handleBuildChild(child: SortedCILE, html: string, opts: { str: number; tmp: number; }, lessNl: boolean | undefined) {\n    let p = lessNl ? \"\" : child.i\n    switch (child.c[0]) {\n      case \"\\\"\":\n        html += p + child.c.slice(1, child.c.length - 1);\n        break;\n\n      default:\n        html += p + this.#parseChubNode(child, opts, lessNl);\n    }\n    return html;\n  }\n\n  #buildChildren(cil: SortedCILE, html: string, opts: { str: number; tmp: number; }, lessNl: boolean | undefined) {\n    for (const child of cil.children)\n      html = this.#handleBuildChild(child, html, opts, lessNl);\n    return html;\n  }\n\n  #buildFootTag(html: string, shorter: boolean, cil: SortedCILE, o: ChubNode, lessNl: boolean) {\n    let p = lessNl ? \"\" : \"\\n\"\n\n    html += p\n    if (!shorter) html += `${lessNl ? '' : cil.i}</${o.tag}>${p}`\n\n    // ¯\\_(ツ)_/¯ Quickest fix.\n    if (html.includes('<>')) html = html\n      .replace(\"<>\", \"\")\n      .replace(\"</>\", \"\")\n\n    return html;\n  }\n\n  #buildContent(cil: SortedCILE, html: string, lessNl: boolean) {\n    let p = lessNl ? \"\" : cil.i + '  '\n    if (cil.o?.content)\n      html += p + cil.o.content;\n    return html;\n  }\n\n  #parseChubNode(cil: SortedCILE, opts = this.#makeIndexes(), lessNl = false) {\n    const o = cil.o!\n    if (!o) throw new CowErr(`No CIL object found!`)\n\n    let shorter = false\n\n    let specialfind = this.arrMatch(o.tag, this.#specialTags)\n    let isSpecial = specialfind.count\n    let inList = specialfind.list\n\n    let html = ''\n\n    let { isTemplate } = this.#parseTemplates(cil, opts);\n\n    // This is enough for certain tags.\n    ({ html, shorter } = this.#buildHeadTag(html, cil, o, isSpecial, shorter, lessNl));\n\n    html = this.#buildContent(cil, html, lessNl);\n\n    html = this.#buildChildren(cil, html, opts, lessNl);\n\n    html = this.#buildFootTag(html, shorter, cil, o, lessNl);\n\n    html = this.#handleSpecialTag(html, lessNl);\n\n    return html\n  }\n\n  #constuctFrom(cil: SortedCILE, lessNl: boolean | undefined, v = '') {\n    let indexes = this.#makeIndexes()\n\n    let travRes = this.#traverse(cil, 0, indexes, v);\n\n    // @Crossover\n    { [cil, indexes] = travRes }\n\n    let res = this.#parseChubNode(cil, indexes, lessNl)\n\n    return res\n  }\n\n  parse(source: string, lessNl?: boolean | undefined) {\n    let str = this.#initialFormat(source)\n\n    let indList = this.#cascadeIndentList(str)\n\n    let sorted = this.#sortCILIndent(indList);\n\n    return this.#constuctFrom(sorted[0], lessNl);\n  }\n\n  async findFile(fileLocations: any) {\n    for (const location of fileLocations) {\n      try { var res = await fetch(location) }\n      catch (error) {\n        console.error(`Error fetching file from '${location}':`, error);\n      }\n      if (res!?.ok)\n        return location;\n    }\n\n    // Return null if no valid file location was found\n    return null;\n  }\n\n  ChubRep(doc: string, quirky = \"<!DOCTYPE html>\") {\n    (doc as any) = this.parse(doc, true);\n    document.open();\n    document.write(quirky + '\\n' + doc);\n    document.close();\n  }\n\n  injectChub(input: string) {\n    // var input = `\n    // div;\n    //   \"wow, im super simple. <br>\n    //   and supper COOOL!\";\n    //   hr #wow $hey=lol .very .omg .neat %omg=js|is|c|l;\n    //   :Super .cool: \"WOOO!\";\n    //     span .woah;\n    //       \"wow!\";\n    // `;\n\n    var htmlCode = this.parse(input, true);\n\n    if (this.chubDev == true) console.log(htmlCode)\n\n    let locationB = this.chubLocation || \"chub\"\n    let locationGot = this.$(locationB)\n    if (!locationGot) locationB = \"body\"\n    else locationGot.innerHTML = htmlCode;\n\n    // On finish, run finish.\n    // chaosGl.chubinjected?.(locationGot);\n    ChubMLMod.#ChubInjected.detail = locationGot;\n    ChubMLMod.#ChubInjected.activate();\n  }\n\n  Router = class Router {\n    __env__ = checkEnvironment();\n\n    constructor() {\n      switch (this.__env__) {\n        case \"Node\":\n          break;\n        case \"Browser\":\n          break;\n      }\n    }\n\n  }\n\n  // Reformat Attributes to prevent conflicts and such.\n  CHUBfax(tex: string, sep = \" \") {\n    let modtxt = tex || \"\";\n    modtxt = modtxt\n      .replaceAll(\"=\", \"|e|\")\n      .replaceAll(\";\", \"|c|\")\n      .replaceAll(\"\\\"\", \"|q|\")\n      .replaceAll(sep, \"|\")\n\n    return modtxt\n  }\n\n  attrSyn(tex: string) {\n    if (`${tex}`.match(/=/gm)!?.length > 1) throw this.s.errorList.eqspl3\n\n    let eqTok = ' spcfork.Equals.Token '\n    let piTok = ' spcfork.Pipe.Token '\n\n    let attrParam = tex\n      // Tokenize\n      .replaceAll(\"=\", eqTok)\n      .replaceAll(\"\\\\|\", piTok)\n\n      .replaceAll('|e|', \"=\")\n      .replaceAll('|c|', \";\")\n      .replaceAll('|q|', \"\\\"\")\n      .replaceAll('|', \" \")\n\n      .replaceAll(piTok, \"|\")\n\n      // Split at Token to prevent multiple splits.\n      .split(eqTok)\n\n    // console.log(attrParam.length, attrParam)\n    return attrParam\n  }\n\n  /**\n   * Fetch a web page and convert it to CHUB\n   * @param {string} url The URL of the web page to fetch\n   * @returns The CHUB representation of the web page\n   */\n  async CHUBWFetch(url: string | URL | Request): Promise<string> {\n    const response = await fetch(url);\n    if (!response?.ok)\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    const html = await response.text();\n    return this.HTMLToChub(html);\n  }\n\n  getURLbit() {\n    var url = window.location.href;\n    var parts = url.split('/');\n    var lastPart = parts[parts.length - 1];\n\n    return lastPart;\n  }\n\n  CHUBsanitize(input: string) {\n    var element = document.createElement('div');\n    element.innerText = input;\n    var sanitizedInput = element.innerHTML;\n    return sanitizedInput;\n  }\n\n  DupeCollection = {} as Record<string, any>\n  /**\n   * @param {string} dupe - The dupe to be added to the collection.\n   * @returns {object} - The edited dupe, the dupe collection, and the stringified and parsed collection.\n   */\n  CHUBduper(dupe: string = \"p;\"): object {\n    if (!this.DupeCollection) {\n      this.DupeCollection = {};\n    }\n\n    if (this.DupeCollection[dupe] !== undefined) {\n      this.DupeCollection[dupe] += 1;\n    } else {\n      this.DupeCollection[dupe] = 0;\n    }\n\n    let editedDupe;\n    if (dupe.includes(\";\")) {\n      let d = dupe.split(\";\");\n      d[0] += ` #${this.DupeCollection[dupe]}`;\n      editedDupe = d.join(\"\");\n    } else {\n      editedDupe = dupe + \";\";\n    }\n\n    let d = {\n      editedDupe,\n      D: this.DupeCollection,\n      s: (() => JSON.stringify(this.DupeCollection)),\n      c: (() => JSON.parse(d.s())),\n    };\n\n    return d\n  }\n\n  CHUBstrprep(str: string) {\n    return str\n      .replace(/[.*+?^${}()|[\\]\\\\\"';:]/g, '\\\\$&')\n      .replace(/[;]/g, '|c|')\n  }\n\n  CHUBunmess(str: string) {\n    const escapedStr = str.replace(/\\\\\\\"/g, '\"');\n    const unescapedStr = escapedStr.replace(/\\\\\\|c|/g, ',');\n\n    return [\n      unescapedStr,\n      JSON.parse(unescapedStr),\n    ]\n  }\n\n  MLTextToNodes(str: string, type: DOMParserSupportedType = 'text/html') {\n    return new DOMParser().parseFromString(str, type);\n  }\n\n  Chubify(str: string) {\n    let parsedHTML = this.parse(str, true)\n    let parsedDOM = this.MLTextToNodes(parsedHTML, 'text/html')\n    return parsedDOM\n  }\n\n  // ARARARAR\n  HTMLToChub = (html: string | Element, delim = \"\") => {\n    if (html instanceof Element) html = html.outerHTML;\n\n    const doc = this.MLTextToNodes(html, 'text/html');\n    return this.getChubML(doc.documentElement, '', delim)\n  }\n\n  getChubML = (node: Element, indent = '', delim = '') => {\n    let chubML = '';\n\n    // Process node name\n    chubML += `${indent}${node.nodeName.toLowerCase()}`;\n\n    // Process attributes\n    if (node.attributes.length > 0) {\n      const attrs = Array.from(node.attributes);\n      chubML = this.#handleAttr(attrs, chubML);\n    }\n\n    // Process child nodes\n    if (node.childNodes.length > 0)\n      chubML = this.#handleChildren(chubML, node, indent, delim);\n    else\n      chubML += ';\\n';\n\n    return chubML;\n  }\n\n  #handleChildTextNode(child: Element, indent: string) {\n    if (!child.textContent) return '';\n    let t = child.textContent.trim();\n    if (t != \"\") return `${indent}  \"${t}\";\\n`;\n    return '';\n  }\n\n  #handleChildren(chubML: string, node: Element, indent: string, delim: string) {\n    chubML += ';\\n';\n    const childNodes = Array.from(node.childNodes);\n    for (const child of childNodes) switch (child.nodeType) {\n      case Node.TEXT_NODE:\n        chubML += this.#handleChildTextNode(child as Element, indent);\n        break;\n      case Node.ELEMENT_NODE:\n        chubML += this.getChubML(child as Element, indent + '  ', delim);\n        break;\n    }\n    chubML += `${indent}${delim}\\n`;\n    return chubML;\n  }\n\n  #handleAttr(attrs: Attr[], chubML: string) {\n    const cfv = (attr: Attr) => this.CHUBfax(attr.value)\n    for (const attr of attrs) switch (attr.name.toLowerCase()) {\n      case 'class':\n        chubML += ` .${cfv(attr)}`;\n        break;\n      case 'id':\n        chubML += ` #${cfv(attr)}`;\n\n      default: chubML += ` %${attr.name}=${cfv(attr)}`;\n    }\n    return chubML;\n  }\n\n  aliasIndexes = [\n    \"beam.lmc\",\n    \"beam.chub\",\n\n    \"index.lmc\",\n    \"index.chub\",\n  ]\n\n  async #checkFile(loc: string | URL | Request, opts = {}) {\n    let req = await fetch(loc, { method: \"HEAD\", ...opts })\n    return [req.ok, req] as [boolean, Response]\n  }\n\n  async #getFileSafely(loc: string | URL | Request) {\n    let [ok, okRes] = await this.#checkFile(loc)\n    if (!ok) throw new Error(`File not found!`)\n    let req = await fetch(loc)\n    return { req, okRes }\n  }\n\n  async #findFileOfCases(fileLocations: string[]) {\n    for (const loc of fileLocations) {\n      let [ok, okRes] = await this.#checkFile(loc)\n      if (ok) return loc\n    }\n    return null\n  }\n\n  #batchFile = (\n    handleFile: Function,\n    loc: string\n  ): Promise<[string, boolean]> => new Promise(async (resolve, reject) => {\n    try {\n      await handleFile(loc, resolve);\n    } catch (error) {\n      reject(error);\n    }\n  });\n\n  async #batchFileOfCases(fileLocations: string[]) {\n    let pArr = [] as Promise<[string, boolean]>[];\n    let abortController = new AbortController();\n\n    const handleFile = async (loc: string, resolve: Function) => {\n      if (abortController.signal.aborted) throw new Error(\"Aborted\");\n      let [f] = await this.#checkFile(loc, { signal: abortController.signal });\n      if (f) abortController.abort();\n      resolve([loc, f]);\n    }\n\n    for (const loc of fileLocations)\n      pArr.push(this.#batchFile(handleFile, loc));\n\n    let resses = await Promise.all(\n      pArr.map(p => p.catch(e => ['', false] as ['', boolean]))\n    );\n\n    // Find first valid res\n    for (const [res, ok] of resses)\n      if (ok) return res;\n\n    return null;\n  }\n\n  async #fileOrFallback(loc: string | URL | Request, slowly = false) {\n    let [ok, okRes] = await this.#checkFile(loc)\n    if (ok) return loc\n    let choice = slowly\n      ? this.#findFileOfCases\n      : this.#batchFileOfCases\n    return await choice(this.aliasIndexes)\n  }\n\n  async beamPrep(location: string | URL | Request, slowly: boolean) {\n    let fileName = await this.#fileOrFallback(location, slowly);\n    if (!fileName)\n      throw new Error(`File not found!`);\n    let req = await this.#getFileSafely(fileName);\n    chaosGl.lastChub = req;\n    return { ...req, location };\n  }\n\n  async beamParse(req: Response, location: any = '') {\n    let text = await req.text();\n    let doc = this.parse(text, true);\n    return { text, doc, location }\n  }\n\n  async beamMake(location: string | URL | Request, slowly: boolean) {\n    let { req } = await this.beamPrep(location, slowly);\n    return await this.beamParse(req, location);\n  }\n\n  async beamDo(req: Response, DOM: any) {\n    let { text, doc, location } = await this.beamParse(req);\n    this.beamRender(doc, DOM, { location, text });\n  }\n\n  beamRender(doc: string, DOM: any, optionalDetails = {}) {\n    this.chubDev && console.log(doc);\n\n    let entrypoint = DOM || this.chubLocation || 'chub';\n\n    let locationGot = typeof entrypoint == 'string'\n      ? this.$(entrypoint) || document.body\n      : entrypoint;\n\n    locationGot.innerHTML = doc;\n\n    // On finish, run finish.\n    // chaosGl.chubinjected?.(locationGot);\n    ChubMLMod.#ChubInjected.detail = {\n      nodes: locationGot,\n      text: doc,\n      ...optionalDetails\n    };\n    ChubMLMod.#ChubInjected.activate();\n  }\n\n  async beamSync(location: string | URL | Request, DOM: any, slowly = false) {\n    // Creates a factory which does prep, then returns a function which does the actual work.\n    let { req } = await this.beamPrep(location, slowly);\n    return async () => await this.beamDo(req, DOM);\n  }\n\n  /**\n   * Example usage:\n   * \n   * ```typescript\n   * const cml = new ChubMLMod();\n   * cml.beamChub('/path/to/chub/file', document.getElementById('app'), true);\n   * ```\n   * \n   * @param slowly - If true, errors are ignored and execution using a quicker Promise.all, this is better for users, worse for servers.\n   */\n  async beamChub(location: string | URL | Request, DOM: any, slowly = false) {\n    return await (await this.beamSync(location, DOM, slowly))();\n  }\n\n  constructor() {\n    super()\n\n    try { this.#elevateToWindow() } catch { }\n  }\n\n  #elevateToWindow() {\n\n  }\n}\n\nvar __ChubI = new ChubMLMod\nexport default eobj(__ChubI, ['ChubML', 'ChubMLMod']).default;"],"mappings":"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","names":["src","d"]}